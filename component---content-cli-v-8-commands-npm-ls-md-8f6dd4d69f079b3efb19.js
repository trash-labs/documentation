(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{M400:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return p}));var a=n("zLVn"),l=(n("q1tI"),n("7ljp")),i=n("O6H6"),o={},r={_frontmatter:o},c=i.a;function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(c,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h3",null,"Synopsis"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"npm ls <package-spec>\n\nalias: list\n")),Object(l.b)("h3",null,"Description"),Object(l.b)("p",null,"This command will print to stdout all the versions of packages that are\ninstalled, as well as their dependencies when ",Object(l.b)("inlineCode",{parentName:"p"},"--all")," is specified, in a\ntree structure."),Object(l.b)("p",null,'Note: to get a "bottoms up" view of why a given package is included in the\ntree at all, use ',Object(l.b)("a",{parentName:"p",href:"/cli/v8/commands/npm-explain"},Object(l.b)("inlineCode",{parentName:"a"},"npm explain")),"."),Object(l.b)("p",null,"Positional arguments are ",Object(l.b)("inlineCode",{parentName:"p"},"name@version-range")," identifiers, which will limit\nthe results to only the paths to the packages named.  Note that nested\npackages will ",Object(l.b)("em",{parentName:"p"},"also")," show the paths to the specified packages.  For\nexample, running ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls promzard")," in npm's source tree will show:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"npm@8.0.0 /path/to/npm\n└─┬ init-package-json@0.0.4\n  └── promzard@0.1.5\n")),Object(l.b)("p",null,"It will print out extraneous, missing, and invalid packages."),Object(l.b)("p",null,"If a project specifies git urls for dependencies these are shown\nin parentheses after the ",Object(l.b)("inlineCode",{parentName:"p"},"name@version")," to make it easier for users to\nrecognize potential forks of a project."),Object(l.b)("p",null,"The tree shown is the logical dependency tree, based on package\ndependencies, not the physical layout of your ",Object(l.b)("inlineCode",{parentName:"p"},"node_modules")," folder."),Object(l.b)("p",null,"When run as ",Object(l.b)("inlineCode",{parentName:"p"},"ll")," or ",Object(l.b)("inlineCode",{parentName:"p"},"la"),", it shows extended information by default."),Object(l.b)("h3",null,"Note: Design Changes Pending"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls")," command's output and behavior made a ",Object(l.b)("em",{parentName:"p"},"ton")," of sense when npm\ncreated a ",Object(l.b)("inlineCode",{parentName:"p"},"node_modules")," folder that naively nested every dependency.  In\nsuch a case, the logical dependency graph and physical tree of packages on\ndisk would be roughly identical."),Object(l.b)("p",null,"With the advent of automatic install-time deduplication of dependencies in\nnpm v3, the ",Object(l.b)("inlineCode",{parentName:"p"},"ls")," output was modified to display the logical dependency\ngraph as a tree structure, since this was more useful to most users.\nHowever, without using ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls -l"),", it became impossible to show ",Object(l.b)("em",{parentName:"p"},"where")," a\npackage was actually installed much of the time!"),Object(l.b)("p",null,"With the advent of automatic installation of ",Object(l.b)("inlineCode",{parentName:"p"},"peerDependencies")," in npm v7,\nthis gets even more curious, as ",Object(l.b)("inlineCode",{parentName:"p"},"peerDependencies"),' are logically\n"underneath" their dependents in the dependency graph, but are always\nphysically at or above their location on disk.'),Object(l.b)("p",null,"Also, in the years since npm got an ",Object(l.b)("inlineCode",{parentName:"p"},"ls")," command (in version 0.0.2!),\ndependency graphs have gotten much larger as a general rule.  Therefore, in\norder to avoid dumping an excessive amount of content to the terminal, ",Object(l.b)("inlineCode",{parentName:"p"},"npm\nls")," now only shows the ",Object(l.b)("em",{parentName:"p"},"top")," level dependencies, unless ",Object(l.b)("inlineCode",{parentName:"p"},"--all")," is\nprovided."),Object(l.b)("p",null,"A thorough re-examination of the use cases, intention, behavior, and output\nof this command, is currently underway.  Expect significant changes to at\nleast the default human-readable ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls")," output in npm v8."),Object(l.b)("h3",null,"Configuration"),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"all")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"When running ",Object(l.b)("inlineCode",{parentName:"p"},"npm outdated")," and ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls"),", setting ",Object(l.b)("inlineCode",{parentName:"p"},"--all")," will show all\noutdated or installed packages, rather than only those directly depended\nupon by the current project."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"json")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"Whether or not to output JSON data, rather than the normal output."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"In ",Object(l.b)("inlineCode",{parentName:"li"},"npm pkg set")," it enables parsing set values with JSON.parse() before\nsaving them to your ",Object(l.b)("inlineCode",{parentName:"li"},"package.json"),".")),Object(l.b)("p",null,"Not supported by all npm commands."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"long")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"Show extended information in ",Object(l.b)("inlineCode",{parentName:"p"},"ls"),", ",Object(l.b)("inlineCode",{parentName:"p"},"search"),", and ",Object(l.b)("inlineCode",{parentName:"p"},"help-search"),"."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"parseable")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"Output parseable results from commands that write to standard output. For\n",Object(l.b)("inlineCode",{parentName:"p"},"npm search"),", this will be tab-separated table format."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"global")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,'Operates in "global" mode, so that packages are installed into the ',Object(l.b)("inlineCode",{parentName:"p"},"prefix"),"\nfolder instead of the current working directory. See\n",Object(l.b)("a",{parentName:"p",href:"/cli/v8/configuring-npm/folders"},"folders")," for more on the differences in behavior."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"packages are installed into the ",Object(l.b)("inlineCode",{parentName:"li"},"{prefix}/lib/node_modules")," folder, instead\nof the current working directory."),Object(l.b)("li",{parentName:"ul"},"bin files are linked to ",Object(l.b)("inlineCode",{parentName:"li"},"{prefix}/bin")),Object(l.b)("li",{parentName:"ul"},"man pages are linked to ",Object(l.b)("inlineCode",{parentName:"li"},"{prefix}/share/man"))),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"depth")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: ",Object(l.b)("inlineCode",{parentName:"li"},"Infinity")," if ",Object(l.b)("inlineCode",{parentName:"li"},"--all")," is set, otherwise ",Object(l.b)("inlineCode",{parentName:"li"},"1")),Object(l.b)("li",{parentName:"ul"},"Type: null or Number")),Object(l.b)("p",null,"The depth to go when recursing packages for ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls"),"."),Object(l.b)("p",null,"If not set, ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls")," will show only the immediate dependencies of the root\nproject. If ",Object(l.b)("inlineCode",{parentName:"p"},"--all")," is set, then npm will show all dependencies by default."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"omit")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: 'dev' if the ",Object(l.b)("inlineCode",{parentName:"li"},"NODE_ENV")," environment variable is set to\n'production', otherwise empty."),Object(l.b)("li",{parentName:"ul"},'Type: "dev", "optional", or "peer" (can be set multiple times)')),Object(l.b)("p",null,"Dependency types to omit from the installation tree on disk."),Object(l.b)("p",null,"Note that these dependencies ",Object(l.b)("em",{parentName:"p"},"are")," still resolved and added to the\n",Object(l.b)("inlineCode",{parentName:"p"},"package-lock.json")," or ",Object(l.b)("inlineCode",{parentName:"p"},"npm-shrinkwrap.json")," file. They are just not\nphysically installed on disk."),Object(l.b)("p",null,"If a package type appears in both the ",Object(l.b)("inlineCode",{parentName:"p"},"--include")," and ",Object(l.b)("inlineCode",{parentName:"p"},"--omit")," lists, then\nit will be included."),Object(l.b)("p",null,"If the resulting omit list includes ",Object(l.b)("inlineCode",{parentName:"p"},"'dev'"),", then the ",Object(l.b)("inlineCode",{parentName:"p"},"NODE_ENV")," environment\nvariable will be set to ",Object(l.b)("inlineCode",{parentName:"p"},"'production'")," for all lifecycle scripts."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"link")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"Used with ",Object(l.b)("inlineCode",{parentName:"p"},"npm ls"),", limiting output to only those packages that are linked."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"package-lock-only")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"If set to true, the current operation will only use the ",Object(l.b)("inlineCode",{parentName:"p"},"package-lock.json"),",\nignoring ",Object(l.b)("inlineCode",{parentName:"p"},"node_modules"),"."),Object(l.b)("p",null,"For ",Object(l.b)("inlineCode",{parentName:"p"},"update")," this means only the ",Object(l.b)("inlineCode",{parentName:"p"},"package-lock.json")," will be updated,\ninstead of checking ",Object(l.b)("inlineCode",{parentName:"p"},"node_modules")," and downloading dependencies."),Object(l.b)("p",null,"For ",Object(l.b)("inlineCode",{parentName:"p"},"list")," this means the output will be based on the tree described by the\n",Object(l.b)("inlineCode",{parentName:"p"},"package-lock.json"),", rather than the contents of ",Object(l.b)("inlineCode",{parentName:"p"},"node_modules"),"."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"unicode")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false on windows, true on mac/unix systems with a unicode locale,\nas defined by the ",Object(l.b)("inlineCode",{parentName:"li"},"LC_ALL"),", ",Object(l.b)("inlineCode",{parentName:"li"},"LC_CTYPE"),", or ",Object(l.b)("inlineCode",{parentName:"li"},"LANG")," environment variables."),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"When set to true, npm uses unicode characters in the tree output. When\nfalse, it uses ascii characters instead of unicode glyphs."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"workspace")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default:"),Object(l.b)("li",{parentName:"ul"},"Type: String (can be set multiple times)")),Object(l.b)("p",null,"Enable running a command in the context of the configured workspaces of the\ncurrent project while filtering by running only the workspaces defined by\nthis configuration option."),Object(l.b)("p",null,"Valid values for the ",Object(l.b)("inlineCode",{parentName:"p"},"workspace")," config are either:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Workspace names"),Object(l.b)("li",{parentName:"ul"},"Path to a workspace directory"),Object(l.b)("li",{parentName:"ul"},"Path to a parent workspace directory (will result in selecting all\nworkspaces within that folder)")),Object(l.b)("p",null,"When set for the ",Object(l.b)("inlineCode",{parentName:"p"},"npm init")," command, this may be set to the folder of a\nworkspace which does not yet exist, to create the folder and set it up as a\nbrand new workspace within the project."),Object(l.b)("p",null,"This value is not exported to the environment for child processes."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"workspaces")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: null"),Object(l.b)("li",{parentName:"ul"},"Type: null or Boolean")),Object(l.b)("p",null,"Set to true to run the command in the context of ",Object(l.b)("strong",{parentName:"p"},"all")," configured\nworkspaces."),Object(l.b)("p",null,"Explicitly setting this to false will cause commands like ",Object(l.b)("inlineCode",{parentName:"p"},"install")," to\nignore workspaces altogether. When not set explicitly:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Commands that operate on the ",Object(l.b)("inlineCode",{parentName:"li"},"node_modules")," tree (install, update, etc.)\nwill link workspaces into the ",Object(l.b)("inlineCode",{parentName:"li"},"node_modules")," folder. - Commands that do\nother things (test, exec, publish, etc.) will operate on the root project,\n",Object(l.b)("em",{parentName:"li"},"unless")," one or more workspaces are specified in the ",Object(l.b)("inlineCode",{parentName:"li"},"workspace")," config.")),Object(l.b)("p",null,"This value is not exported to the environment for child processes."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"include-workspace-root")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"Include the workspace root when workspaces are enabled for a command."),Object(l.b)("p",null,"When false, specifying individual workspaces via the ",Object(l.b)("inlineCode",{parentName:"p"},"workspace")," config, or\nall workspaces via the ",Object(l.b)("inlineCode",{parentName:"p"},"workspaces")," flag, will cause npm to operate only on\nthe specified workspaces, and not on the root project."),Object(l.b)("p",null,"This value is not exported to the environment for child processes."),Object(l.b)("h4",null,Object(l.b)("inlineCode",{parentName:"h4"},"install-links")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Default: false"),Object(l.b)("li",{parentName:"ul"},"Type: Boolean")),Object(l.b)("p",null,"When set file: protocol dependencies that exist outside of the project root\nwill be packed and installed as regular dependencies instead of creating a\nsymlink. This option has no effect on workspaces."),Object(l.b)("h3",null,"See Also"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/using-npm/package-spec"},"package spec")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-explain"},"npm explain")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-config"},"npm config")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/configuring-npm/npmrc"},"npmrc")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/configuring-npm/folders"},"npm folders")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-explain"},"npm explain")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-install"},"npm install")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-link"},"npm link")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-prune"},"npm prune")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-outdated"},"npm outdated")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-update"},"npm update"))))}p.isMDXComponent=!0},O6H6:function(e,t,n){"use strict";var a=n("vOnD"),l=n("u9kb"),i=n("aOgs"),o=n("q1tI"),r=n.n(o),c=n("7ljp"),p=n("pD55"),b=n("8Aig"),s=n("ReZb"),m=n("GCVy"),u=n("+6vE");var d=function(e){var t=e.children;return r.a.createElement(l.d,{as:"pre",mt:0,mb:3,p:3,border:0,style:{color:"rgb(57, 58, 52)",backgroundColor:"rgb(246, 248, 250)",overflow:"auto"}},r.a.createElement(l.s,{fontFamily:"mono",fontSize:1},t))};var h=function(e){var t=e.children;return r.a.createElement("strong",null,t)},O=n("gnlW"),j=n("mwnC"),f=n("/Rw0"),N=n("dVM4"),g=Object(a.f)(l.e).withConfig({displayName:"table-of-contents___StyledBox",componentId:"eay2b8-0"})({listStyle:"none",lineHeight:"1.4em"});function y(e){var t=e.items,n=e.depth;return r.a.createElement(g,{key:t,as:"ul",m:0,p:0},t.map((function(e){return r.a.createElement(l.e,{as:"li",key:e.url,pl:n>0?3:0},r.a.createElement(l.n,{key:e.title,display:"inline-block",py:1,href:e.url,color:"gray.6"},e.title),e.items?r.a.createElement(y,{items:e.items,depth:n+1}):null)})))}y.defaultProps={depth:0};var w=y,C=n("MfeC");function k(e){var t=C.a.getPath(e.location.pathname),n=C.a.getVariantAndPage(e.root,t);if(!n)return null;var a=C.a.getVariantsForPage(e.root,n.page),i=[],o=a[0];return 0===a.length?null:(a.forEach((function(e){e.page.url===t&&(o=e),i.push(r.a.createElement(l.i.Item,{onClick:function(){window.location.href=e.page.url},key:e.variant.title},e.variant.title))})),r.a.createElement(l.i,{overlay:e.overlay},r.a.createElement(l.i.Button,null,o.variant.title),r.a.createElement(k.Menu,{direction:e.direction,width:e.menuWidth},i)))}k.Menu=Object(a.f)(l.i.Menu).withConfig({displayName:"variant-select__Menu",componentId:"sc-1rmksyl-0"})(["width:",";"],(function(e){return e.width?e.width:"160px"}));var v=k,x=Object(a.f)(l.k).withConfig({displayName:"layout___StyledFlex",componentId:"sc-1xkoyzi-0"})({zIndex:0}),E=Object(a.f)(l.l).withConfig({displayName:"layout___StyledGrid",componentId:"sc-1xkoyzi-1"})({alignItems:"start",alignSelf:"start"}),_=Object(a.f)(l.e).withConfig({displayName:"layout___StyledBox",componentId:"sc-1xkoyzi-2"})({gridArea:"heading"}),T=Object(a.f)(l.e).withConfig({displayName:"layout___StyledBox2",componentId:"sc-1xkoyzi-3"})({"margin-top":"25px"}),D=Object(a.f)(l.o).withConfig({displayName:"layout___StyledPosition",componentId:"sc-1xkoyzi-4"})({gridArea:"table-of-contents",overflow:"auto"}),I=Object(a.f)(l.e).withConfig({displayName:"layout___StyledBox3",componentId:"sc-1xkoyzi-5"})({gridArea:"content"});t.a=function(e){var t=e.children,n=e.pageContext,a=e.location,o=n.frontmatter,g=o.title,y=o.description,k=o.status,S=o.source,W=o.additionalContributors,B=void 0===W?[]:W,z=C.a.getVariantRoot(a.pathname);return r.a.createElement(c.a,{components:{Index:s.a,Note:m.a,Prompt:d,PromptReply:h,Screenshot:O.a}},r.a.createElement(l.k,{flexDirection:"column",minHeight:"100vh"},r.a.createElement(p.a,{title:g,description:y}),r.a.createElement(b.b,{location:a,isSearchEnabled:n.isSearchEnabled}),r.a.createElement(x,{flex:"1 1 auto",flexDirection:"row"},r.a.createElement(l.e,{display:["none",null,null,"block"]},r.a.createElement(j.a,{editOnGitHub:n.themeOptions.showSidebarEditLink&&n.themeOptions.editOnGitHub,location:a})),r.a.createElement(E,{id:"skip-nav",maxWidth:"100%",gridTemplateColumns:["100%",null,"minmax(0, 65ch) 220px"],gridTemplateAreas:['"heading" "content"',null,'"heading table-of-contents" "content table-of-contents"'],gridColumnGap:[null,null,6,7],gridRowGap:3,mx:"auto",p:[5,6,null,7]},r.a.createElement(_,null,r.a.createElement(l.d,{borderWidth:0,borderBottomWidth:1,borderRadius:0,pb:2},r.a.createElement(l.e,null,r.a.createElement(l.e,null,r.a.createElement(l.m,{as:"h1"},g),y))),null!=z?r.a.createElement(T,null,r.a.createElement(v,{overlay:!0,direction:"se",menuWidth:"min(30ch, 500px)",root:z,location:a})):null),n.tableOfContents.items?r.a.createElement(D,{display:["none",null,"block"],position:"sticky",top:b.a+24,mt:"6px",maxHeight:"calc(100vh - "+b.a+"px - 24px)"},r.a.createElement(l.s,{display:"inline-block",fontWeight:"bold",mb:1},"Table of contents"),r.a.createElement(w,{items:n.tableOfContents.items})):null,r.a.createElement(I,null,k||S?r.a.createElement(l.k,{mb:3,alignItems:"center"},k?r.a.createElement(N.a,{status:k}):null,r.a.createElement(l.e,{mx:"auto"}),S?r.a.createElement(f.a,{href:S}):null):null,n.tableOfContents.items?r.a.createElement(l.e,{display:["block",null,"none"],mb:3},r.a.createElement(l.h,null,(function(e){var t=e.open;return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.s,{as:"summary",fontWeight:"bold"},t?r.a.createElement(l.r,{icon:i.b,mr:2}):r.a.createElement(l.r,{icon:i.c,mr:2}),"Table of contents"),r.a.createElement(l.e,{pt:1},r.a.createElement(w,{items:n.tableOfContents.items})))}))):null,t,r.a.createElement(u.a,{editOnGitHub:n.themeOptions.editOnGitHub,editUrl:n.editUrl,contributors:n.contributors.concat(B.map((function(e){return{login:e}})))}))))))}}}]);
//# sourceMappingURL=component---content-cli-v-8-commands-npm-ls-md-8f6dd4d69f079b3efb19.js.map