{"version":3,"sources":["webpack:///./content/cli/v8/commands/npm-install.md","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt-reply.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/table-of-contents.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/variant-select.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","Prompt","children","as","mt","mb","p","border","style","color","backgroundColor","overflow","fontFamily","fontSize","PromptReply","listStyle","lineHeight","TableOfContents","items","depth","key","m","map","item","url","pl","title","display","py","href","defaultProps","VariantSelect","path","NavHierarchy","getPath","location","pathname","vp","getVariantAndPage","root","variantPages","getVariantsForPage","page","selectedItem","length","forEach","match","push","Item","onClick","window","variant","overlay","Button","Menu","direction","width","menuWidth","styled","Dropdown","zIndex","alignItems","alignSelf","gridArea","Layout","pageContext","frontmatter","description","status","source","additionalContributors","variantRoot","getVariantRoot","Index","Note","Screenshot","flexDirection","minHeight","isSearchEnabled","flex","editOnGitHub","themeOptions","showSidebarEditLink","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","open","icon","ChevronDownIcon","mr","ChevronRightIcon","pt","editUrl","contributors","concat","login"],"mappings":"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","file":"component---content-cli-v-8-commands-npm-install-md-b429ebae8748eb32d3f4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/documentation/documentation/node_modules/gatsby-theme-doctornpm/src/components/layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Synopsis`}</h3>\n    {\n      /* AUTOGENERATED USAGE DESCRIPTIONS START */\n    }\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/commands/install.js */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install [<package-spec> ...]\n\naliases: add, i, in, ins, inst, insta, instal, isnt, isnta, isntal, isntall\n`}</code></pre>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/commands/install.js */\n    }\n    {\n      /* AUTOGENERATED USAGE DESCRIPTIONS END */\n    }\n    <h3>{`Description`}</h3>\n    <p>{`This command installs a package and any packages that it depends on. If the\npackage has a package-lock, or an npm shrinkwrap file, or a yarn lock file,\nthe installation of dependencies will be driven by that, respecting the\nfollowing order of precedence:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm-shrinkwrap.json`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`package-lock.json`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn.lock`}</inlineCode></li>\n    </ul>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/configuring-npm/package-lock-json\"\n      }}>{`package-lock.json`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/commands/npm-shrinkwrap\"\n      }}><inlineCode parentName=\"a\">{`npm shrinkwrap`}</inlineCode></a>{`.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`package`}</inlineCode>{` is:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`a) a folder containing a program described by a\n`}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/configuring-npm/package-json\"\n        }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{` file`}</li>\n      <li parentName=\"ul\">{`b) a gzipped tarball containing (a)`}</li>\n      <li parentName=\"ul\">{`c) a url that resolves to (b)`}</li>\n      <li parentName=\"ul\">{`d) a `}<inlineCode parentName=\"li\">{`<name>@<version>`}</inlineCode>{` that is published on the registry (see\n`}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/using-npm/registry\"\n        }}><inlineCode parentName=\"a\">{`registry`}</inlineCode></a>{`) with (c)`}</li>\n      <li parentName=\"ul\">{`e) a `}<inlineCode parentName=\"li\">{`<name>@<tag>`}</inlineCode>{` (see `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-dist-tag\"\n        }}><inlineCode parentName=\"a\">{`npm dist-tag`}</inlineCode></a>{`) that\npoints to (d)`}</li>\n      <li parentName=\"ul\">{`f) a `}<inlineCode parentName=\"li\">{`<name>`}</inlineCode>{` that has a \"latest\" tag satisfying (e)`}</li>\n      <li parentName=\"ul\">{`g) a `}<inlineCode parentName=\"li\">{`<git remote url>`}</inlineCode>{` that resolves to (a)`}</li>\n    </ul>\n    <p>{`Even if you never publish your package, you can still get a lot of benefits\nof using npm if you just want to write a node program (a), and perhaps if\nyou also want to be able to easily install it elsewhere after packing it up\ninto a tarball (b).`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` (in a package directory, no arguments):`}</p>\n        <p parentName=\"li\">{`  Install the dependencies to the local `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folder.`}</p>\n        <p parentName=\"li\">{`  In global mode (ie, with `}<inlineCode parentName=\"p\">{`-g`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--global`}</inlineCode>{` appended to the command),\nit installs the current package context (ie, the current working\ndirectory) as a global package.`}</p>\n        <p parentName=\"li\">{`  By default, `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` will install all modules listed as\ndependencies in `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v8/configuring-npm/package-json\"\n          }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  With the `}<inlineCode parentName=\"p\">{`--production`}</inlineCode>{` flag (or when the `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` environment\nvariable is set to `}<inlineCode parentName=\"p\">{`production`}</inlineCode>{`), npm will not install modules listed\nin `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`. To install all modules listed in both\n`}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` when `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` environment\nvariable is set to `}<inlineCode parentName=\"p\">{`production`}</inlineCode>{`, you can use `}<inlineCode parentName=\"p\">{`--production=false`}</inlineCode>{`.`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`NOTE: The `}<inlineCode parentName=\"p\">{`--production`}</inlineCode>{` flag has no particular meaning when adding a\ndependency to a project.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <folder>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`<folder>`}</inlineCode>{` sits inside the root of your project, its dependencies will be installed and may\nbe hoisted to the top-level `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` as they would for other\ntypes of dependencies. If `}<inlineCode parentName=\"p\">{`<folder>`}</inlineCode>{` sits outside the root of your project,\n`}<em parentName=\"p\">{`npm will not install the package dependencies`}</em>{` in the directory `}<inlineCode parentName=\"p\">{`<folder>`}</inlineCode>{`,\nbut it will create a symlink to `}<inlineCode parentName=\"p\">{`<folder>`}</inlineCode>{`.`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`NOTE: If you want to install the content of a directory like a package from the registry instead of creating a link, you would need to use the `}<inlineCode parentName=\"p\">{`--install-links`}</inlineCode>{` option.`}</p>\n        </blockquote>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install ../../other-package --install-links\nnpm install ./sub-package\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <tarball file>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a package that is sitting on the filesystem.  Note: if you just\nwant to link a dev directory into your npm root, you can do this more\neasily by using `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v8/commands/npm-link\"\n          }}><inlineCode parentName=\"a\">{`npm link`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Tarball requirements:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The filename `}<em parentName=\"p\">{`must`}</em>{` use `}<inlineCode parentName=\"p\">{`.tar`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`.tar.gz`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`.tgz`}</inlineCode>{` as the\nextension.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The package contents should reside in a subfolder inside the tarball\n(usually it is called `}<inlineCode parentName=\"p\">{`package/`}</inlineCode>{`). npm strips one directory layer\nwhen installing the package (an equivalent of `}<inlineCode parentName=\"p\">{`tar x\n--strip-components=1`}</inlineCode>{` is run).`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The package must contain a `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file with `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` properties.`}</p>\n            <p parentName=\"li\">{`Example:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm install ./package.tgz\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <tarball url>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Fetch the tarball url, and then install it.  In order to distinguish between\nthis and other options, the argument must start with \"http://\" or \"https://\"`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install https://github.com/indexzero/forever/tarball/v0.5.6\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Do a `}<inlineCode parentName=\"p\">{`<name>@<tag>`}</inlineCode>{` install, where `}<inlineCode parentName=\"p\">{`<tag>`}</inlineCode>{` is the \"tag\" config. (See\n`}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v8/using-npm/config\"\n          }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{`. The config's default value is `}<inlineCode parentName=\"p\">{`latest`}</inlineCode>{`.)`}</p>\n        <p parentName=\"li\">{`  In most cases, this will install the version of the modules tagged as\n`}<inlineCode parentName=\"p\">{`latest`}</inlineCode>{` on the npm registry.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax\n`}</code></pre>\n        <p parentName=\"li\">{`  `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` saves any specified packages into `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` by default.\nAdditionally, you can control where and how they get saved with some\nadditional flags:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-P, --save-prod`}</inlineCode>{`: Package will appear in your `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{`. This\nis the default unless `}<inlineCode parentName=\"p\">{`-D`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`-O`}</inlineCode>{` are present.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-D, --save-dev`}</inlineCode>{`: Package will appear in your `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-O, --save-optional`}</inlineCode>{`: Package will appear in your\n`}<inlineCode parentName=\"p\">{`optionalDependencies`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-save`}</inlineCode>{`: Prevents saving to `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{`.`}</p>\n            <p parentName=\"li\">{`When using any of the above options to save dependencies to your\npackage.json, there are two additional, optional flags:`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-E, --save-exact`}</inlineCode>{`: Saved dependencies will be configured with an\nexact version rather than using npm's default semver range operator.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-B, --save-bundle`}</inlineCode>{`: Saved dependencies will also be added to your\n`}<inlineCode parentName=\"p\">{`bundleDependencies`}</inlineCode>{` list.`}</p>\n            <p parentName=\"li\">{`Further, if you have an `}<inlineCode parentName=\"p\">{`npm-shrinkwrap.json`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{`\nthen it will be updated as well.`}</p>\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`<scope>`}</inlineCode>{` is optional. The package will be downloaded from the registry\nassociated with the specified scope. If no registry is associated with\nthe given scope the default registry is assumed. See\n`}<a parentName=\"p\" {...{\n                \"href\": \"/cli/v8/using-npm/scope\"\n              }}><inlineCode parentName=\"a\">{`scope`}</inlineCode></a>{`.`}</p>\n            <p parentName=\"li\">{`Note: if you do not include the @-symbol on your scope name, npm will\ninterpret this as a GitHub repository instead, see below. Scopes names\nmust also be followed by a slash.`}</p>\n            <p parentName=\"li\">{`Examples:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm install sax\nnpm install githubname/reponame\nnpm install @myorg/privatepackage\nnpm install node-tap --save-dev\nnpm install dtrace-provider --save-optional\nnpm install readable-stream --save-exact\nnpm install ansi-regex --save-bundle\n`}</code></pre>\n            <p parentName=\"li\"><strong parentName=\"p\">{`Note`}</strong>{`: If there is a file or folder named `}<inlineCode parentName=\"p\">{`<name>`}</inlineCode>{` in the current\nworking directory, then it will try to install that, and only try to\nfetch the package by name if it is not valid.`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <alias>@npm:<name>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a package under a custom alias. Allows multiple versions of\na same-name package side-by-side, more convenient import names for\npackages with otherwise long ones, and using git forks replacements\nor forked npm packages as replacements. Aliasing works only on your\nproject and does not rename packages in transitive dependencies.\nAliases should follow the naming conventions stated in\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.npmjs.com/package/validate-npm-package-name#naming-rules\"\n          }}><inlineCode parentName=\"a\">{`validate-npm-package-name`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Examples:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install my-react@npm:react\nnpm install jquery2@npm:jquery@2\nnpm install jquery3@npm:jquery@3\nnpm install npa@npm:npm-package-arg\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<tag>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the version of the package that is referenced by the specified tag.\nIf the tag does not exist in the registry data for that package, then this\nwill fail.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@latest\nnpm install @myorg/mypackage@latest\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<version>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the specified version of the package.  This will fail if the\nversion has not been published to the registry.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@0.1.1\nnpm install @myorg/privatepackage@1.5.0\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<version range>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a version of the package matching the specified version range.\nThis will follow the same rules for resolving dependencies described in\n`}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v8/configuring-npm/package-json\"\n          }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Note that most version ranges must be put in quotes so that your shell\nwill treat it as a single argument.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@\">=0.1.0 <0.2.0\"\nnpm install @myorg/privatepackage@\"16 - 17\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <git remote url>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Installs the package from the hosted git provider, cloning it with\n`}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.  For a full git remote url, only that URL will be attempted.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n`}</code></pre>\n        <p parentName=\"li\">{`  `}<inlineCode parentName=\"p\">{`<protocol>`}</inlineCode>{` is one of `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+ssh`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+http`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+https`}</inlineCode>{`, or\n`}<inlineCode parentName=\"p\">{`git+file`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{`\ncan be any valid semver range or exact version, and npm will look for\nany tags or refs matching that range in the remote repository, much as\nit would for a registry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is specified, then the default branch of the\nrepository is used.`}</p>\n        <p parentName=\"li\">{`  If the repository makes use of submodules, those submodules will be\ncloned as well.`}</p>\n        <p parentName=\"li\">{`  If the package being installed contains a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script, its\n`}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will be installed, and the prepare\nscript will be run, before the package is packaged and installed.`}</p>\n        <p parentName=\"li\">{`  The following git environment variables are recognized by npm and will\nbe added to the environment when running git:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_ASKPASS`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_EXEC_PATH`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_PROXY_COMMAND`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSH`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSH_COMMAND`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSL_CAINFO`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSL_NO_VERIFY`}</inlineCode></p>\n            <p parentName=\"li\">{`See the git man page for details.`}</p>\n            <p parentName=\"li\">{`Examples:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm install git+ssh://git@github.com:npm/cli.git#v1.0.27\nnpm install git+ssh://git@github.com:npm/cli#pull/273\nnpm install git+ssh://git@github.com:npm/cli#semver:^5.0\nnpm install git+https://isaacs@github.com/npm/cli.git\nnpm install git://github.com/npm/cli.git#v1.0.27\nGIT_SSH_COMMAND='ssh -i ~/.ssh/custom_ident' npm install git+ssh://git@github.com:npm/cli.git\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <githubname>/<githubrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install github:<githubname>/<githubrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://github.com/githubname/githubrepo`}</inlineCode>{` by\nattempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{`\ncan be any valid semver range or exact version, and npm will look for\nany tags or refs matching that range in the remote repository, much as\nit would for a registry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is specified, then the default branch is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`\nwill be installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the\npackage is done installing.`}</p>\n        <p parentName=\"li\">{`  Examples:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install mygithubuser/myproject\nnpm install github:mygithubuser/myproject\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install gist:[<githubname>/]<gistID>[#<commit-ish>|#semver:<semver>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://gist.github.com/gistID`}</inlineCode>{` by attempting to\nclone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`. The GitHub username associated with the gist is\noptional and will not be saved in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install gist:101a11beef\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install bitbucket:<bitbucketname>/<bitbucketrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://bitbucket.org/bitbucketname/bitbucketrepo`}</inlineCode>{`\nby attempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install bitbucket:mybitbucketuser/myproject\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://gitlab.com/gitlabname/gitlabrepo`}</inlineCode>{`\nby attempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install gitlab:mygitlabuser/myproject\nnpm install gitlab:myusr/myproj#semver:^5.0\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`You may combine multiple arguments and even multiple types of arguments.\nFor example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install sax@\">=0.1.0 <0.2.0\" bench supervisor\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--tag`}</inlineCode>{` argument will apply to all of the specified install targets. If\na tag with the given name exists, the tagged version is preferred over\nnewer versions.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--dry-run`}</inlineCode>{` argument will report in the usual way what the install\nwould have done without actually installing anything.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--package-lock-only`}</inlineCode>{` argument will only update the\n`}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{`, instead of checking `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` and downloading\ndependencies.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`-f`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--force`}</inlineCode>{` argument will force npm to fetch remote resources\neven if a local copy exists on disk.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install sax --force\n`}</code></pre>\n    <h3>{`Configuration`}</h3>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/using-npm/config\"\n      }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{` help doc.  Many of the configuration\nparams have some effect on installation, since that's most of what npm\ndoes.`}</p>\n    <p>{`These are some of the most common options related to installation.`}</p>\n    {\n      /* AUTOGENERATED CONFIG DESCRIPTIONS START */\n    }\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`save`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` unless when using `}<inlineCode parentName=\"li\">{`npm update`}</inlineCode>{` where it defaults to `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Save installed packages to a `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file as dependencies.`}</p>\n    <p>{`When used with the `}<inlineCode parentName=\"p\">{`npm rm`}</inlineCode>{` command, removes the dependency from\n`}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n    <p>{`Will also prevent writing to `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` if set to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`save-exact`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Dependencies saved to package.json will be configured with an exact version\nrather than using npm's default semver range operator.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`global`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Operates in \"global\" mode, so that packages are installed into the `}<inlineCode parentName=\"p\">{`prefix`}</inlineCode>{`\nfolder instead of the current working directory. See\n`}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/configuring-npm/folders\"\n      }}>{`folders`}</a>{` for more on the differences in behavior.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`packages are installed into the `}<inlineCode parentName=\"li\">{`{prefix}/lib/node_modules`}</inlineCode>{` folder, instead\nof the current working directory.`}</li>\n      <li parentName=\"ul\">{`bin files are linked to `}<inlineCode parentName=\"li\">{`{prefix}/bin`}</inlineCode></li>\n      <li parentName=\"ul\">{`man pages are linked to `}<inlineCode parentName=\"li\">{`{prefix}/share/man`}</inlineCode></li>\n    </ul>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`global-style`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Causes npm to install the package into your local `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folder with\nthe same layout it uses with the global `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folder. Only your\ndirect dependencies will show in `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` and everything they depend\non will be flattened in their `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folders. This obviously will\neliminate some deduping. If used with `}<inlineCode parentName=\"p\">{`legacy-bundling`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`legacy-bundling`}</inlineCode>{`\nwill be preferred.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`legacy-bundling`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Causes npm to install the package such that versions of npm prior to 1.4,\nsuch as the one included with node 0.8, can install the package. This\neliminates all automatic deduping. If used with `}<inlineCode parentName=\"p\">{`global-style`}</inlineCode>{` this option\nwill be preferred.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`omit`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: 'dev' if the `}<inlineCode parentName=\"li\">{`NODE_ENV`}</inlineCode>{` environment variable is set to\n'production', otherwise empty.`}</li>\n      <li parentName=\"ul\">{`Type: \"dev\", \"optional\", or \"peer\" (can be set multiple times)`}</li>\n    </ul>\n    <p>{`Dependency types to omit from the installation tree on disk.`}</p>\n    <p>{`Note that these dependencies `}<em parentName=\"p\">{`are`}</em>{` still resolved and added to the\n`}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`npm-shrinkwrap.json`}</inlineCode>{` file. They are just not\nphysically installed on disk.`}</p>\n    <p>{`If a package type appears in both the `}<inlineCode parentName=\"p\">{`--include`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`--omit`}</inlineCode>{` lists, then\nit will be included.`}</p>\n    <p>{`If the resulting omit list includes `}<inlineCode parentName=\"p\">{`'dev'`}</inlineCode>{`, then the `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` environment\nvariable will be set to `}<inlineCode parentName=\"p\">{`'production'`}</inlineCode>{` for all lifecycle scripts.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`strict-peer-deps`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`If set to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`--legacy-peer-deps`}</inlineCode>{` is not set, then `}<em parentName=\"p\">{`any`}</em>{`\nconflicting `}<inlineCode parentName=\"p\">{`peerDependencies`}</inlineCode>{` will be treated as an install failure, even\nif npm could reasonably guess the appropriate resolution based on non-peer\ndependency relationships.`}</p>\n    <p>{`By default, conflicting `}<inlineCode parentName=\"p\">{`peerDependencies`}</inlineCode>{` deep in the dependency graph will\nbe resolved using the nearest non-peer dependency specification, even if\ndoing so will result in some packages receiving a peer dependency outside\nthe range set in their package's `}<inlineCode parentName=\"p\">{`peerDependencies`}</inlineCode>{` object.`}</p>\n    <p>{`When such and override is performed, a warning is printed, explaining the\nconflict and the packages involved. If `}<inlineCode parentName=\"p\">{`--strict-peer-deps`}</inlineCode>{` is set, then\nthis warning is treated as a failure.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`package-lock`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: true`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`If set to false, then ignore `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` files when installing. This\nwill also prevent `}<em parentName=\"p\">{`writing`}</em>{` `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` if `}<inlineCode parentName=\"p\">{`save`}</inlineCode>{` is true.`}</p>\n    <p>{`This configuration does not affect `}<inlineCode parentName=\"p\">{`npm ci`}</inlineCode>{`.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`foreground-scripts`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Run all build scripts (ie, `}<inlineCode parentName=\"p\">{`preinstall`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`postinstall`}</inlineCode>{`)\nscripts for installed packages in the foreground process, sharing standard\ninput, output, and error with the main npm process.`}</p>\n    <p>{`Note that this will generally make installs run slower, and be much noisier,\nbut can be useful for debugging.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`ignore-scripts`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`If true, npm does not run scripts specified in package.json files.`}</p>\n    <p>{`Note that commands explicitly intended to run a particular script, such as\n`}<inlineCode parentName=\"p\">{`npm start`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`npm stop`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`npm restart`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`npm test`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`npm run-script`}</inlineCode>{`\nwill still run their intended script if `}<inlineCode parentName=\"p\">{`ignore-scripts`}</inlineCode>{` is set, but they\nwill `}<em parentName=\"p\">{`not`}</em>{` run any pre- or post-scripts.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`audit`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: true`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`When \"true\" submit audit reports alongside the current npm command to the\ndefault registry and all registries configured for scopes. See the\ndocumentation for `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/commands/npm-audit\"\n      }}><inlineCode parentName=\"a\">{`npm audit`}</inlineCode></a>{` for details on what is\nsubmitted.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`bin-links`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: true`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Tells npm to create symlinks (or `}<inlineCode parentName=\"p\">{`.cmd`}</inlineCode>{` shims on Windows) for package\nexecutables.`}</p>\n    <p>{`Set to false to have it not do this. This can be used to work around the\nfact that some file systems don't support symlinks, even on ostensibly Unix\nsystems.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`fund`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: true`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`When \"true\" displays the message at the end of each `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{`\nacknowledging the number of dependencies looking for funding. See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/commands/npm-fund\"\n      }}><inlineCode parentName=\"a\">{`npm\nfund`}</inlineCode></a>{` for details.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`dry-run`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Indicates that you don't want npm to make any changes and that it should\nonly report what it would have done. This can be passed into any of the\ncommands that modify your local installation, eg, `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`update`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`dedupe`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`uninstall`}</inlineCode>{`, as well as `}<inlineCode parentName=\"p\">{`pack`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`publish`}</inlineCode>{`.`}</p>\n    <p>{`Note: This is NOT honored by other network related commands, eg `}<inlineCode parentName=\"p\">{`dist-tags`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`owner`}</inlineCode>{`, etc.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`workspace`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default:`}</li>\n      <li parentName=\"ul\">{`Type: String (can be set multiple times)`}</li>\n    </ul>\n    <p>{`Enable running a command in the context of the configured workspaces of the\ncurrent project while filtering by running only the workspaces defined by\nthis configuration option.`}</p>\n    <p>{`Valid values for the `}<inlineCode parentName=\"p\">{`workspace`}</inlineCode>{` config are either:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Workspace names`}</li>\n      <li parentName=\"ul\">{`Path to a workspace directory`}</li>\n      <li parentName=\"ul\">{`Path to a parent workspace directory (will result in selecting all\nworkspaces within that folder)`}</li>\n    </ul>\n    <p>{`When set for the `}<inlineCode parentName=\"p\">{`npm init`}</inlineCode>{` command, this may be set to the folder of a\nworkspace which does not yet exist, to create the folder and set it up as a\nbrand new workspace within the project.`}</p>\n    <p>{`This value is not exported to the environment for child processes.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`workspaces`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: null`}</li>\n      <li parentName=\"ul\">{`Type: null or Boolean`}</li>\n    </ul>\n    <p>{`Set to true to run the command in the context of `}<strong parentName=\"p\">{`all`}</strong>{` configured\nworkspaces.`}</p>\n    <p>{`Explicitly setting this to false will cause commands like `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{` to\nignore workspaces altogether. When not set explicitly:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Commands that operate on the `}<inlineCode parentName=\"li\">{`node_modules`}</inlineCode>{` tree (install, update, etc.)\nwill link workspaces into the `}<inlineCode parentName=\"li\">{`node_modules`}</inlineCode>{` folder. - Commands that do\nother things (test, exec, publish, etc.) will operate on the root project,\n`}<em parentName=\"li\">{`unless`}</em>{` one or more workspaces are specified in the `}<inlineCode parentName=\"li\">{`workspace`}</inlineCode>{` config.`}</li>\n    </ul>\n    <p>{`This value is not exported to the environment for child processes.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`include-workspace-root`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Include the workspace root when workspaces are enabled for a command.`}</p>\n    <p>{`When false, specifying individual workspaces via the `}<inlineCode parentName=\"p\">{`workspace`}</inlineCode>{` config, or\nall workspaces via the `}<inlineCode parentName=\"p\">{`workspaces`}</inlineCode>{` flag, will cause npm to operate only on\nthe specified workspaces, and not on the root project.`}</p>\n    <p>{`This value is not exported to the environment for child processes.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`install-links`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`When set file: protocol dependencies that exist outside of the project root\nwill be packed and installed as regular dependencies instead of creating a\nsymlink. This option has no effect on workspaces.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    {\n      /* AUTOGENERATED CONFIG DESCRIPTIONS END */\n    }\n    <h3>{`Algorithm`}</h3>\n    <p>{`Given a `}<inlineCode parentName=\"p\">{`package{dep}`}</inlineCode>{` structure: `}<inlineCode parentName=\"p\">{`A{B,C}, B{C}, C{D}`}</inlineCode>{`,\nthe npm install algorithm produces:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`A\n+-- B\n+-- C\n+-- D\n`}</code></pre>\n    <p>{`That is, the dependency from B to C is satisfied by the fact that A already\ncaused C to be installed at a higher level. D is still installed at the top\nlevel because nothing conflicts with it.`}</p>\n    <p>{`For `}<inlineCode parentName=\"p\">{`A{B,C}, B{C,D@1}, C{D@2}`}</inlineCode>{`, this algorithm produces:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`A\n+-- B\n+-- C\n   \\`-- D@2\n+-- D@1\n`}</code></pre>\n    <p>{`Because B's D@1 will be installed in the top-level, C now has to install\nD@2 privately for itself. This algorithm is deterministic, but different\ntrees may be produced if two dependencies are requested for installation in\na different order.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/configuring-npm/folders\"\n      }}>{`folders`}</a>{` for a more detailed description of\nthe specific folder structures that npm creates.`}</p>\n    <h3>{`See Also`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/configuring-npm/folders\"\n        }}>{`npm folders`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-update\"\n        }}>{`npm update`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-audit\"\n        }}>{`npm audit`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-fund\"\n        }}>{`npm fund`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-link\"\n        }}>{`npm link`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-rebuild\"\n        }}>{`npm rebuild`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/using-npm/scripts\"\n        }}>{`npm scripts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-config\"\n        }}>{`npm config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/configuring-npm/npmrc\"\n        }}>{`npmrc`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/using-npm/registry\"\n        }}>{`npm registry`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-dist-tag\"\n        }}>{`npm dist-tag`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-uninstall\"\n        }}>{`npm uninstall`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-shrinkwrap\"\n        }}>{`npm shrinkwrap`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/configuring-npm/package-json\"\n        }}>{`package.json`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/using-npm/workspaces\"\n        }}>{`workspaces`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\nimport {BorderBox, Text} from '@primer/components'\n\nfunction Prompt({children}) {\n  return (\n      <BorderBox\n       as=\"pre\"\n       mt={0}\n       mb={3}\n       p={3}\n       border={0}\n       style={{color: 'rgb(57, 58, 52)', backgroundColor: 'rgb(246, 248, 250)', overflow: 'auto'}}\n      >\n          <Text fontFamily=\"mono\" fontSize={1}>{children}</Text>\n      </BorderBox>\n  )\n}\n\nexport default Prompt\n","import React from 'react';\n\nfunction PromptReply({children}) {\n    return (<strong>{children}</strong>);\n}\n\nexport default PromptReply;\n","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box key={items} as=\"ul\" m={0} p={0} css={{listStyle: 'none', lineHeight: '1.4em'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link key={item.title} display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","// VariantSelect: allows a variant to be set up within a document hierarchy\n//\n// For example, given two paths `/docs/v1.0/foo` and `/docs/v2.0/foo`, the\n// second folder acts as a variant.  If you use <VariantSelect root=\"/docs\">\n// then you'll get a selection for the different variants (v1.0, v2.0).\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Dropdown } from '@primer/components';\nimport NavHierarchy from '../nav-hierarchy'\n\nVariantSelect.Menu = styled(Dropdown.Menu)`\n  width: ${props => props.width ? props.width : '160px'};\n`\n\nfunction VariantSelect(props) {\n  const path = NavHierarchy.getPath(props.location.pathname);\n  const vp = NavHierarchy.getVariantAndPage(props.root, path);\n\n  if (!vp) {\n      return null;\n  }\n\n  const variantPages = NavHierarchy.getVariantsForPage(props.root, vp.page);\n  const items = [];\n  let selectedItem = variantPages[0];\n\n  if (variantPages.length === 0) {\n      return null;\n  }\n\n  variantPages.forEach((match) => {\n      if (match.page.url === path) {\n          selectedItem = match;\n      }\n\n      items.push(<Dropdown.Item onClick={() => { window.location.href = match.page.url; }} key={match.variant.title}>{match.variant.title}</Dropdown.Item>);\n  });\n\n  return (\n      <Dropdown overlay={props.overlay}>\n          <Dropdown.Button>{selectedItem.variant.title}</Dropdown.Button>\n          <VariantSelect.Menu direction={props.direction} width={props.menuWidth}>\n              {items}\n          </VariantSelect.Menu>\n      </Dropdown>\n  );\n}\n\nexport default VariantSelect\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  StyledOcticon,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport React from 'react'\nimport {MDXProvider} from \"@mdx-js/react\"\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport Index from './index'\nimport Note from './note'\nimport PageFooter from './page-footer'\nimport Prompt from './prompt'\nimport PromptReply from './prompt-reply'\nimport Screenshot from './screenshot'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\nimport VariantSelect from './variant-select'\nimport NavHierarchy from '../nav-hierarchy'\n\nfunction Layout({children, pageContext, location}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  const variantRoot = NavHierarchy.getVariantRoot(location.pathname);\n\n  return (\n    <MDXProvider components={{\n      Index,\n      Note,\n      Prompt,\n      PromptReply,\n      Screenshot\n    }}>\n\n      <Flex flexDirection=\"column\" minHeight=\"100vh\">\n        <Head title={title} description={description} />\n        <Header location={location} isSearchEnabled={pageContext.isSearchEnabled} />\n        <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n          <Box display={['none', null, null, 'block']}>\n            <Sidebar\n              editOnGitHub={\n                pageContext.themeOptions.showSidebarEditLink &&\n                pageContext.themeOptions.editOnGitHub\n              }\n              location={location}\n            />\n          </Box>\n          <Grid\n            id=\"skip-nav\"\n            maxWidth=\"100%\"\n            gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n            gridTemplateAreas={[\n              '\"heading\" \"content\"',\n              null,\n              '\"heading table-of-contents\" \"content table-of-contents\"',\n            ]}\n            gridColumnGap={[null, null, 6, 7]}\n            gridRowGap={3}\n            mx=\"auto\"\n            p={[5, 6, null, 7]}\n            css={{alignItems: 'start', alignSelf: 'start'}}\n          >\n            <Box css={{gridArea: 'heading'}}>\n              <BorderBox\n                borderWidth={0}\n                borderBottomWidth={1}\n                borderRadius={0}\n                pb={2}\n              >\n                <Box>\n                  <Box>\n                    <Heading as=\"h1\">{title}</Heading>\n                    {description}\n                  </Box>\n                </Box>\n              </BorderBox>\n              {variantRoot != null ? (\n                <Box css={{'margin-top': '25px'}}>\n                  <VariantSelect overlay={true} direction=\"se\" menuWidth=\"min(30ch, 500px)\" root={variantRoot} location={location} />\n                </Box>\n              ) : null}\n            </Box>\n            {pageContext.tableOfContents.items ? (\n              <Position\n                display={['none', null, 'block']}\n                css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n                position=\"sticky\"\n                top={HEADER_HEIGHT + 24}\n                mt=\"6px\"\n                maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n              >\n                <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                  Table of contents\n                </Text>\n                <TableOfContents items={pageContext.tableOfContents.items} />\n              </Position>\n            ) : null}\n            <Box css={{gridArea: 'content'}}>\n              {status || source ? (\n                <Flex mb={3} alignItems=\"center\">\n                  {status ? <StatusLabel status={status} /> : null}\n                  <Box mx=\"auto\" />\n                  {source ? <SourceLink href={source} /> : null}\n                </Flex>\n              ) : null}\n              {pageContext.tableOfContents.items ? (\n                <Box display={['block', null, 'none']} mb={3}>\n                  <Details>\n                    {({open}) => (\n                      <>\n                        <Text as=\"summary\" fontWeight=\"bold\">\n                          {open ? (\n                            <StyledOcticon icon={ChevronDownIcon} mr={2} />\n                          ) : (\n                            <StyledOcticon icon={ChevronRightIcon} mr={2} />\n                          )}\n                          Table of contents\n                        </Text>\n                        <Box pt={1}>\n                          <TableOfContents\n                            items={pageContext.tableOfContents.items}\n                          />\n                        </Box>\n                      </>\n                    )}\n                  </Details>\n                </Box>\n              ) : null}\n              {children}\n              <PageFooter\n                editOnGitHub={pageContext.themeOptions.editOnGitHub}\n                editUrl={pageContext.editUrl}\n                contributors={pageContext.contributors.concat(\n                  additionalContributors.map((login) => ({login})),\n                )}\n              />\n            </Box>\n          </Grid>\n        </Flex>\n      </Flex>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}