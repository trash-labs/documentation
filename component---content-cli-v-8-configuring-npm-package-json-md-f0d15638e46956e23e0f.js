(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{4963:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return p}));var a=t("zLVn"),i=(t("q1tI"),t("7ljp")),l=t("O6H6"),o={},r={_frontmatter:o},s=l.a;function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)(s,Object.assign({},r,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",null,"Description"),Object(i.b)("p",null,"This document is all you need to know about what's required in your\npackage.json file.  It must be actual JSON, not just a JavaScript object\nliteral."),Object(i.b)("p",null,"A lot of the behavior described in this document is affected by the config\nsettings described in ",Object(i.b)("a",{parentName:"p",href:"/cli/v8/using-npm/config"},Object(i.b)("inlineCode",{parentName:"a"},"config")),"."),Object(i.b)("h3",null,"name"),Object(i.b)("p",null,"If you plan to publish your package, the ",Object(i.b)("em",{parentName:"p"},"most")," important things in your\npackage.json are the name and version fields as they will be required. The\nname and version together form an identifier that is assumed to be\ncompletely unique.  Changes to the package should come along with changes\nto the version. If you don't plan to publish your package, the name and\nversion fields are optional."),Object(i.b)("p",null,"The name is what your thing is called."),Object(i.b)("p",null,"Some rules:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The name must be less than or equal to 214 characters. This includes the\nscope for scoped packages."),Object(i.b)("li",{parentName:"ul"},"The names of scoped packages can begin with a dot or an underscore. This\nis not permitted without a scope."),Object(i.b)("li",{parentName:"ul"},"New packages must not have uppercase letters in the name."),Object(i.b)("li",{parentName:"ul"},"The name ends up being part of a URL, an argument on the command line,\nand a folder name. Therefore, the name can't contain any non-URL-safe\ncharacters.")),Object(i.b)("p",null,"Some tips:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Don't use the same name as a core Node module."),Object(i.b)("li",{parentName:"ul"},'Don\'t put "js" or "node" in the name.  It\'s assumed that it\'s js, since\nyou\'re writing a package.json file, and you can specify the engine using\nthe "engines" field.  (See below.)'),Object(i.b)("li",{parentName:"ul"},"The name will probably be passed as an argument to require(), so it\nshould be something short, but also reasonably descriptive."),Object(i.b)("li",{parentName:"ul"},"You may want to check the npm registry to see if there's something by\nthat name already, before you get too attached to it.\n",Object(i.b)("a",{parentName:"li",href:"https://www.npmjs.com/"},"https://www.npmjs.com/"))),Object(i.b)("p",null,"A name can be optionally prefixed by a scope, e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"@myorg/mypackage"),". See\n",Object(i.b)("a",{parentName:"p",href:"/cli/v8/using-npm/scope"},Object(i.b)("inlineCode",{parentName:"a"},"scope"))," for more detail."),Object(i.b)("h3",null,"version"),Object(i.b)("p",null,"If you plan to publish your package, the ",Object(i.b)("em",{parentName:"p"},"most")," important things in your\npackage.json are the name and version fields as they will be required. The\nname and version together form an identifier that is assumed to be\ncompletely unique.  Changes to the package should come along with changes\nto the version. If you don't plan to publish your package, the name and\nversion fields are optional."),Object(i.b)("p",null,"Version must be parseable by\n",Object(i.b)("a",{parentName:"p",href:"https://github.com/npm/node-semver"},"node-semver"),", which is bundled with\nnpm as a dependency.  (",Object(i.b)("inlineCode",{parentName:"p"},"npm install semver")," to use it yourself.)"),Object(i.b)("h3",null,"description"),Object(i.b)("p",null,"Put a description in it.  It's a string.  This helps people discover your\npackage, as it's listed in ",Object(i.b)("inlineCode",{parentName:"p"},"npm search"),"."),Object(i.b)("h3",null,"keywords"),Object(i.b)("p",null,"Put keywords in it.  It's an array of strings.  This helps people discover\nyour package as it's listed in ",Object(i.b)("inlineCode",{parentName:"p"},"npm search"),"."),Object(i.b)("h3",null,"homepage"),Object(i.b)("p",null,"The url to the project homepage."),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'"homepage": "https://github.com/owner/project#readme"\n')),Object(i.b)("h3",null,"bugs"),Object(i.b)("p",null,"The url to your project's issue tracker and / or the email address to which\nissues should be reported. These are helpful for people who encounter\nissues with your package."),Object(i.b)("p",null,"It should look like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "url" : "https://github.com/owner/project/issues",\n  "email" : "project@hostname.com"\n}\n')),Object(i.b)("p",null,'You can specify either one or both values. If you want to provide only a\nurl, you can specify the value for "bugs" as a simple string instead of an\nobject.'),Object(i.b)("p",null,"If a url is provided, it will be used by the ",Object(i.b)("inlineCode",{parentName:"p"},"npm bugs")," command."),Object(i.b)("h3",null,"license"),Object(i.b)("p",null,"You should specify a license for your package so that people know how they\nare permitted to use it, and any restrictions you're placing on it."),Object(i.b)("p",null,"If you're using a common license such as BSD-2-Clause or MIT, add a current\nSPDX license identifier for the license you're using, like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "license" : "BSD-3-Clause"\n}\n')),Object(i.b)("p",null,"You can check ",Object(i.b)("a",{parentName:"p",href:"https://spdx.org/licenses/"},"the full list of SPDX license\nIDs"),".  Ideally you should pick one that is\n",Object(i.b)("a",{parentName:"p",href:"https://opensource.org/licenses/alphabetical"},"OSI")," approved."),Object(i.b)("p",null,"If your package is licensed under multiple common licenses, use an ",Object(i.b)("a",{parentName:"p",href:"https://spdx.dev/specifications/"},"SPDX\nlicense expression syntax version 2.0\nstring"),", like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "license" : "(ISC OR GPL-3.0)"\n}\n')),Object(i.b)("p",null,"If you are using a license that hasn't been assigned an SPDX identifier, or if\nyou are using a custom license, use a string value like this one:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "license" : "SEE LICENSE IN <filename>"\n}\n')),Object(i.b)("p",null,"Then include a file named ",Object(i.b)("inlineCode",{parentName:"p"},"<filename>")," at the top level of the package."),Object(i.b)("p",null,'Some old packages used license objects or a "licenses" property containing\nan array of license objects:'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'// Not valid metadata\n{\n  "license" : {\n    "type" : "ISC",\n    "url" : "https://opensource.org/licenses/ISC"\n  }\n}\n\n// Not valid metadata\n{\n  "licenses" : [\n    {\n      "type": "MIT",\n      "url": "https://www.opensource.org/licenses/mit-license.php"\n    },\n    {\n      "type": "Apache-2.0",\n      "url": "https://opensource.org/licenses/apache2.0.php"\n    }\n  ]\n}\n')),Object(i.b)("p",null,"Those styles are now deprecated. Instead, use SPDX expressions, like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "license": "ISC"\n}\n')),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "license": "(MIT OR Apache-2.0)"\n}\n')),Object(i.b)("p",null,"Finally, if you do not wish to grant others the right to use a private or\nunpublished package under any terms:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "license": "UNLICENSED"\n}\n')),Object(i.b)("p",null,"Consider also setting ",Object(i.b)("inlineCode",{parentName:"p"},'"private": true')," to prevent accidental publication."),Object(i.b)("h3",null,"people fields: author, contributors"),Object(i.b)("p",null,'The "author" is one person.  "contributors" is an array of people.  A\n"person" is an object with a "name" field and optionally "url" and "email",\nlike this:'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name" : "Barney Rubble",\n  "email" : "b@rubble.com",\n  "url" : "http://barnyrubble.tumblr.com/"\n}\n')),Object(i.b)("p",null,"Or you can shorten that all into a single string, and npm will parse it for\nyou:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "author": "Barney Rubble <b@rubble.com> (http://barnyrubble.tumblr.com/)"\n}\n')),Object(i.b)("p",null,"Both email and url are optional either way."),Object(i.b)("p",null,'npm also sets a top-level "maintainers" field with your npm user info.'),Object(i.b)("h3",null,"funding"),Object(i.b)("p",null,"You can specify an object containing a URL that provides up-to-date\ninformation about ways to help fund development of your package, or a\nstring URL, or an array of these:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "funding": {\n    "type" : "individual",\n    "url" : "http://example.com/donate"\n  },\n\n  "funding": {\n    "type" : "patreon",\n    "url" : "https://www.patreon.com/my-account"\n  },\n\n  "funding": "http://example.com/donate",\n\n  "funding": [\n    {\n      "type" : "individual",\n      "url" : "http://example.com/donate"\n    },\n    "http://example.com/donateAlso",\n    {\n      "type" : "patreon",\n      "url" : "https://www.patreon.com/my-account"\n    }\n  ]\n}\n')),Object(i.b)("p",null,"Users can use the ",Object(i.b)("inlineCode",{parentName:"p"},"npm fund")," subcommand to list the ",Object(i.b)("inlineCode",{parentName:"p"},"funding")," URLs of all\ndependencies of their project, direct and indirect. A shortcut to visit\neach funding url is also available when providing the project name such as:\n",Object(i.b)("inlineCode",{parentName:"p"},"npm fund <projectname>")," (when there are multiple URLs, the first one will\nbe visited)"),Object(i.b)("h3",null,"files"),Object(i.b)("p",null,"The optional ",Object(i.b)("inlineCode",{parentName:"p"},"files")," field is an array of file patterns that describes the\nentries to be included when your package is installed as a dependency. File\npatterns follow a similar syntax to ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),", but reversed: including a\nfile, directory, or glob pattern (",Object(i.b)("inlineCode",{parentName:"p"},"*"),", ",Object(i.b)("inlineCode",{parentName:"p"},"**/*"),", and such) will make it so\nthat file is included in the tarball when it's packed. Omitting the field\nwill make it default to ",Object(i.b)("inlineCode",{parentName:"p"},'["*"]'),", which means it will include all files."),Object(i.b)("p",null,"Some special files and directories are also included or excluded regardless\nof whether they exist in the ",Object(i.b)("inlineCode",{parentName:"p"},"files")," array (see below)."),Object(i.b)("p",null,"You can also provide a ",Object(i.b)("inlineCode",{parentName:"p"},".npmignore"),' file in the root of your package or in\nsubdirectories, which will keep files from being included. At the root of\nyour package it will not override the "files" field, but in subdirectories\nit will. The ',Object(i.b)("inlineCode",{parentName:"p"},".npmignore")," file works just like a ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),". If there is\na ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore")," file, and ",Object(i.b)("inlineCode",{parentName:"p"},".npmignore")," is missing, ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),"'s contents\nwill be used instead."),Object(i.b)("p",null,'Files included with the "package.json#files" field ',Object(i.b)("em",{parentName:"p"},"cannot")," be excluded\nthrough ",Object(i.b)("inlineCode",{parentName:"p"},".npmignore")," or ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),"."),Object(i.b)("p",null,"Certain files are always included, regardless of settings:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"package.json")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"README")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LICENSE")," / ",Object(i.b)("inlineCode",{parentName:"li"},"LICENCE")),Object(i.b)("li",{parentName:"ul"},'The file in the "main" field')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"README")," & ",Object(i.b)("inlineCode",{parentName:"p"},"LICENSE")," can have any case and extension."),Object(i.b)("p",null,"Conversely, some files are always ignored:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".git")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"CVS")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".svn")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".hg")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".lock-wscript")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".wafpickle-N")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".*.swp")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".DS_Store")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"._*")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"npm-debug.log")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".npmrc")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"node_modules")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"config.gypi")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"*.orig")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"package-lock.json")," (use\n",Object(i.b)("a",{parentName:"li",href:"/cli/v8/configuring-npm/npm-shrinkwrap-json"},Object(i.b)("inlineCode",{parentName:"a"},"npm-shrinkwrap.json"))," if you wish\nit to be published)")),Object(i.b)("h3",null,"main"),Object(i.b)("p",null,"The main field is a module ID that is the primary entry point to your\nprogram.  That is, if your package is named ",Object(i.b)("inlineCode",{parentName:"p"},"foo"),", and a user installs it,\nand then does ",Object(i.b)("inlineCode",{parentName:"p"},'require("foo")'),", then your main module's exports object will\nbe returned."),Object(i.b)("p",null,"This should be a module relative to the root of your package folder."),Object(i.b)("p",null,"For most modules, it makes the most sense to have a main script and often\nnot much else."),Object(i.b)("p",null,"If ",Object(i.b)("inlineCode",{parentName:"p"},"main")," is not set it defaults to ",Object(i.b)("inlineCode",{parentName:"p"},"index.js")," in the package's root folder."),Object(i.b)("h3",null,"browser"),Object(i.b)("p",null,"If your module is meant to be used client-side the browser field should be\nused instead of the main field. This is helpful to hint users that it might\nrely on primitives that aren't available in Node.js modules. (e.g.\n",Object(i.b)("inlineCode",{parentName:"p"},"window"),")"),Object(i.b)("h3",null,"bin"),Object(i.b)("p",null,'A lot of packages have one or more executable files that they\'d like to\ninstall into the PATH. npm makes this pretty easy (in fact, it uses this\nfeature to install the "npm" executable.)'),Object(i.b)("p",null,"To use this, supply a ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," field in your package.json which is a map of\ncommand name to local file name. When this package is installed\nglobally, that file will be linked where global bins go so it is\navailable to run by name.  When this package is installed as a\ndependency in another package, the file will be linked where it will be\navailable to that package either directly by ",Object(i.b)("inlineCode",{parentName:"p"},"npm exec")," or by name in other\nscripts when invoking them via ",Object(i.b)("inlineCode",{parentName:"p"},"npm run-script"),"."),Object(i.b)("p",null,"For example, myapp could have this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "bin": {\n    "myapp": "./cli.js"\n  }\n}\n')),Object(i.b)("p",null,"So, when you install myapp, it'll create a symlink from the ",Object(i.b)("inlineCode",{parentName:"p"},"cli.js")," script\nto ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/local/bin/myapp"),"."),Object(i.b)("p",null,"If you have a single executable, and its name should be the name of the\npackage, then you can just supply it as a string.  For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-program",\n  "version": "1.2.5",\n  "bin": "./path/to/program"\n}\n')),Object(i.b)("p",null,"would be the same as this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-program",\n  "version": "1.2.5",\n  "bin": {\n    "my-program": "./path/to/program"\n  }\n}\n')),Object(i.b)("p",null,"Please make sure that your file(s) referenced in ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," starts with\n",Object(i.b)("inlineCode",{parentName:"p"},"#!/usr/bin/env node"),", otherwise the scripts are started without the node\nexecutable!"),Object(i.b)("p",null,"Note that you can also set the executable files using ",Object(i.b)("a",{parentName:"p",href:"#directoriesbin"},"directories.bin"),"."),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"/cli/v8/configuring-npm/folders#executables"},"folders")," for more info on\nexecutables."),Object(i.b)("h3",null,"man"),Object(i.b)("p",null,"Specify either a single file or an array of filenames to put in place for\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"man")," program to find."),Object(i.b)("p",null,"If only a single file is provided, then it's installed such that it is the\nresult from ",Object(i.b)("inlineCode",{parentName:"p"},"man <pkgname>"),", regardless of its actual filename.  For\nexample:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "foo",\n  "version": "1.2.3",\n  "description": "A packaged foo fooer for fooing foos",\n  "main": "foo.js",\n  "man": "./man/doc.1"\n}\n')),Object(i.b)("p",null,"would link the ",Object(i.b)("inlineCode",{parentName:"p"},"./man/doc.1")," file in such that it is the target for ",Object(i.b)("inlineCode",{parentName:"p"},"man\nfoo")),Object(i.b)("p",null,"If the filename doesn't start with the package name, then it's prefixed.\nSo, this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "foo",\n  "version": "1.2.3",\n  "description": "A packaged foo fooer for fooing foos",\n  "main": "foo.js",\n  "man": [\n    "./man/foo.1",\n    "./man/bar.1"\n  ]\n}\n')),Object(i.b)("p",null,"will create files to do ",Object(i.b)("inlineCode",{parentName:"p"},"man foo")," and ",Object(i.b)("inlineCode",{parentName:"p"},"man foo-bar"),"."),Object(i.b)("p",null,"Man files must end with a number, and optionally a ",Object(i.b)("inlineCode",{parentName:"p"},".gz")," suffix if they are\ncompressed.  The number dictates which man section the file is installed\ninto."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "foo",\n  "version": "1.2.3",\n  "description": "A packaged foo fooer for fooing foos",\n  "main": "foo.js",\n  "man": [\n    "./man/foo.1",\n    "./man/foo.2"\n  ]\n}\n')),Object(i.b)("p",null,"will create entries for ",Object(i.b)("inlineCode",{parentName:"p"},"man foo")," and ",Object(i.b)("inlineCode",{parentName:"p"},"man 2 foo")),Object(i.b)("h3",null,"directories"),Object(i.b)("p",null,"The CommonJS ",Object(i.b)("a",{parentName:"p",href:"http://wiki.commonjs.org/wiki/Packages/1.0"},"Packages")," spec\ndetails a few ways that you can indicate the structure of your package\nusing a ",Object(i.b)("inlineCode",{parentName:"p"},"directories")," object. If you look at ",Object(i.b)("a",{parentName:"p",href:"https://registry.npmjs.org/npm/latest"},"npm's\npackage.json"),", you'll see that it\nhas directories for doc, lib, and man."),Object(i.b)("p",null,"In the future, this information may be used in other creative ways."),Object(i.b)("h4",null,"directories.bin"),Object(i.b)("p",null,"If you specify a ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," directory in ",Object(i.b)("inlineCode",{parentName:"p"},"directories.bin"),", all the files in\nthat folder will be added."),Object(i.b)("p",null,"Because of the way the ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," directive works, specifying both a ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," path\nand setting ",Object(i.b)("inlineCode",{parentName:"p"},"directories.bin")," is an error. If you want to specify\nindividual files, use ",Object(i.b)("inlineCode",{parentName:"p"},"bin"),", and for all the files in an existing ",Object(i.b)("inlineCode",{parentName:"p"},"bin"),"\ndirectory, use ",Object(i.b)("inlineCode",{parentName:"p"},"directories.bin"),"."),Object(i.b)("h4",null,"directories.man"),Object(i.b)("p",null,'A folder that is full of man pages.  Sugar to generate a "man" array by\nwalking the folder.'),Object(i.b)("h3",null,"repository"),Object(i.b)("p",null,"Specify the place where your code lives. This is helpful for people who\nwant to contribute.  If the git repo is on GitHub, then the ",Object(i.b)("inlineCode",{parentName:"p"},"npm docs"),"\ncommand will be able to find you."),Object(i.b)("p",null,"Do it like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "repository": {\n    "type": "git",\n    "url": "https://github.com/npm/cli.git"\n  }\n}\n')),Object(i.b)("p",null,"The URL should be a publicly available (perhaps read-only) url that can be\nhanded directly to a VCS program without any modification.  It should not\nbe a url to an html project page that you put in your browser.  It's for\ncomputers."),Object(i.b)("p",null,"For GitHub, GitHub gist, Bitbucket, or GitLab repositories you can use the\nsame shortcut syntax you use for ",Object(i.b)("inlineCode",{parentName:"p"},"npm install"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "repository": "npm/npm",\n\n  "repository": "github:user/repo",\n\n  "repository": "gist:11081aaa281",\n\n  "repository": "bitbucket:user/repo",\n\n  "repository": "gitlab:user/repo"\n}\n')),Object(i.b)("p",null,"If the ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," for your package is not in the root directory (for\nexample if it is part of a monorepo), you can specify the directory in\nwhich it lives:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "repository": {\n    "type": "git",\n    "url": "https://github.com/facebook/react.git",\n    "directory": "packages/react-dom"\n  }\n}\n')),Object(i.b)("h3",null,"scripts"),Object(i.b)("p",null,'The "scripts" property is a dictionary containing script commands that are\nrun at various times in the lifecycle of your package.  The key is the\nlifecycle event, and the value is the command to run at that point.'),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"/cli/v8/using-npm/scripts"},Object(i.b)("inlineCode",{parentName:"a"},"scripts"))," to find out more about writing package\nscripts."),Object(i.b)("h3",null,"config"),Object(i.b)("p",null,'A "config" object can be used to set configuration parameters used in\npackage scripts that persist across upgrades.  For instance, if a package\nhad the following:'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "foo",\n  "config": {\n    "port": "8080"\n  }\n}\n')),Object(i.b)("p",null,'It could also have a "start" command that referenced the\n',Object(i.b)("inlineCode",{parentName:"p"},"npm_package_config_port")," environment variable."),Object(i.b)("h3",null,"dependencies"),Object(i.b)("p",null,"Dependencies are specified in a simple object that maps a package name to a\nversion range. The version range is a string which has one or more\nspace-separated descriptors.  Dependencies can also be identified with a\ntarball or git URL."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},'Please do not put test harnesses or transpilers or other "development"\ntime tools in your ',Object(i.b)("inlineCode",{parentName:"strong"},"dependencies")," object."),"  See ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies"),", below."),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"https://github.com/npm/node-semver#versions"},"semver")," for more details about specifying version ranges."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"version")," Must match ",Object(i.b)("inlineCode",{parentName:"li"},"version")," exactly"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},">version")," Must be greater than ",Object(i.b)("inlineCode",{parentName:"li"},"version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},">=version")," etc"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<=version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"~version"),' "Approximately equivalent to version"  See\n',Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/node-semver#versions"},"semver")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"^version"),' "Compatible with version"  See ',Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/node-semver#versions"},"semver")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"1.2.x")," 1.2.0, 1.2.1, etc., but not 1.3.0"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"http://...")," See 'URLs as Dependencies' below"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"*")," Matches any version"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'""')," (just an empty string) Same as ",Object(i.b)("inlineCode",{parentName:"li"},"*")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"version1 - version2")," Same as ",Object(i.b)("inlineCode",{parentName:"li"},">=version1 <=version2"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"range1 || range2")," Passes if either range1 or range2 are satisfied."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"git...")," See 'Git URLs as Dependencies' below"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"user/repo")," See 'GitHub URLs' below"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"tag")," A specific version tagged and published as ",Object(i.b)("inlineCode",{parentName:"li"},"tag"),"  See ",Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-dist-tag"},Object(i.b)("inlineCode",{parentName:"a"},"npm\ndist-tag"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"path/path/path")," See ",Object(i.b)("a",{parentName:"li",href:"#local-paths"},"Local Paths")," below")),Object(i.b)("p",null,"For example, these are all valid:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "foo": "1.0.0 - 2.9999.9999",\n    "bar": ">=1.0.2 <2.1.2",\n    "baz": ">1.0.2 <=2.3.4",\n    "boo": "2.0.1",\n    "qux": "<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0",\n    "asd": "http://asdf.com/asdf.tar.gz",\n    "til": "~1.2",\n    "elf": "~1.2.3",\n    "two": "2.x",\n    "thr": "3.3.x",\n    "lat": "latest",\n    "dyl": "file:../dyl"\n  }\n}\n')),Object(i.b)("h4",null,"URLs as Dependencies"),Object(i.b)("p",null,"You may specify a tarball URL in place of a version range."),Object(i.b)("p",null,"This tarball will be downloaded and installed locally to your package at\ninstall time."),Object(i.b)("h4",null,"Git URLs as Dependencies"),Object(i.b)("p",null,"Git urls are of the form:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"<protocol>")," is one of ",Object(i.b)("inlineCode",{parentName:"p"},"git"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+ssh"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+http"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+https"),", or\n",Object(i.b)("inlineCode",{parentName:"p"},"git+file"),"."),Object(i.b)("p",null,"If ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>"),", ",Object(i.b)("inlineCode",{parentName:"p"},"<semver>")," can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for\na registry dependency. If neither ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>")," is\nspecified, then ",Object(i.b)("inlineCode",{parentName:"p"},"master")," is used."),Object(i.b)("p",null,"Examples:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"git+ssh://git@github.com:npm/cli.git#v1.0.27\ngit+ssh://git@github.com:npm/cli#semver:^5.0\ngit+https://isaacs@github.com/npm/cli.git\ngit://github.com/npm/cli.git#v1.0.27\n")),Object(i.b)("p",null,"When installing from a ",Object(i.b)("inlineCode",{parentName:"p"},"git")," repository, the presence of certain fields in the\n",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," will cause npm to believe it needs to perform a build. To do so\nyour repository will be cloned into a temporary directory, all of its deps\ninstalled, relevant scripts run, and the resulting directory packed and\ninstalled."),Object(i.b)("p",null,"This flow will occur if your git dependency uses ",Object(i.b)("inlineCode",{parentName:"p"},"workspaces"),", or if any of the\nfollowing scripts are present:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"build")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"prepare")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"prepack")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"preinstall")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"install")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"postinstall"))),Object(i.b)("p",null,"If your git repository includes pre-built artifacts, you will likely want to\nmake sure that none of the above scripts are defined, or your dependency\nwill be rebuilt for every installation."),Object(i.b)("h4",null,"GitHub URLs"),Object(i.b)("p",null,'As of version 1.1.65, you can refer to GitHub urls as just "foo":\n"user/foo-project".  Just as with git URLs, a ',Object(i.b)("inlineCode",{parentName:"p"},"commit-ish")," suffix can be\nincluded.  For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "foo",\n  "version": "0.0.0",\n  "dependencies": {\n    "express": "expressjs/express",\n    "mocha": "mochajs/mocha#4727d357ea",\n    "module": "user/repo#feature\\/branch"\n  }\n}\n')),Object(i.b)("h4",null,"Local Paths"),Object(i.b)("p",null,"As of version 2.0.0 you can provide a path to a local directory that\ncontains a package. Local paths can be saved using ",Object(i.b)("inlineCode",{parentName:"p"},"npm install -S")," or ",Object(i.b)("inlineCode",{parentName:"p"},"npm\ninstall --save"),", using any of these forms:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"../foo/bar\n~/foo/bar\n./foo/bar\n/foo/bar\n")),Object(i.b)("p",null,"in which case they will be normalized to a relative path and added to your\n",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),". For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "baz",\n  "dependencies": {\n    "bar": "file:../foo/bar"\n  }\n}\n')),Object(i.b)("p",null,"This feature is helpful for local offline development and creating tests\nthat require npm installing where you don't want to hit an external server,\nbut should not be used when publishing packages to the public registry."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"note"),": Packages linked by local path will not have their own\ndependencies installed when ",Object(i.b)("inlineCode",{parentName:"p"},"npm install")," is ran in this case.  You must\nrun ",Object(i.b)("inlineCode",{parentName:"p"},"npm install")," from inside the local path itself."),Object(i.b)("h3",null,"devDependencies"),Object(i.b)("p",null,"If someone is planning on downloading and using your module in their\nprogram, then they probably don't want or need to download and build the\nexternal test or documentation framework that you use."),Object(i.b)("p",null,"In this case, it's best to map these additional items in a\n",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," object."),Object(i.b)("p",null,"These things will be installed when doing ",Object(i.b)("inlineCode",{parentName:"p"},"npm link")," or ",Object(i.b)("inlineCode",{parentName:"p"},"npm install")," from\nthe root of a package, and can be managed like any other npm configuration\nparam.  See ",Object(i.b)("a",{parentName:"p",href:"/cli/v8/using-npm/config"},Object(i.b)("inlineCode",{parentName:"a"},"config"))," for more on the topic."),Object(i.b)("p",null,"For build steps that are not platform-specific, such as compiling\nCoffeeScript or other languages to JavaScript, use the ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script to\ndo this, and make the required package a devDependency."),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "ethopia-waza",\n  "description": "a delightfully fruity coffee varietal",\n  "version": "1.2.3",\n  "devDependencies": {\n    "coffee-script": "~1.6.3"\n  },\n  "scripts": {\n    "prepare": "coffee -o lib/ -c src/waza.coffee"\n  },\n  "main": "lib/waza.js"\n}\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script will be run before publishing, so that users can\nconsume the functionality without requiring them to compile it themselves.\nIn dev mode (ie, locally running ",Object(i.b)("inlineCode",{parentName:"p"},"npm install"),"), it'll run this script as\nwell, so that you can test it easily."),Object(i.b)("h3",null,"peerDependencies"),Object(i.b)("p",null,"In some cases, you want to express the compatibility of your package with a\nhost tool or library, while not necessarily doing a ",Object(i.b)("inlineCode",{parentName:"p"},"require")," of this host.\nThis is usually referred to as a ",Object(i.b)("em",{parentName:"p"},"plugin"),". Notably, your module may be\nexposing a specific interface, expected and specified by the host\ndocumentation."),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "tea-latte",\n  "version": "1.3.5",\n  "peerDependencies": {\n    "tea": "2.x"\n  }\n}\n')),Object(i.b)("p",null,"This ensures your package ",Object(i.b)("inlineCode",{parentName:"p"},"tea-latte")," can be installed ",Object(i.b)("em",{parentName:"p"},"along")," with the\nsecond major version of the host package ",Object(i.b)("inlineCode",{parentName:"p"},"tea")," only. ",Object(i.b)("inlineCode",{parentName:"p"},"npm install\ntea-latte")," could possibly yield the following dependency graph:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"├── tea-latte@1.3.5\n└── tea@2.2.0\n")),Object(i.b)("p",null,"In npm versions 3 through 6, ",Object(i.b)("inlineCode",{parentName:"p"},"peerDependencies")," were not automatically\ninstalled, and would raise a warning if an invalid version of the peer\ndependency was found in the tree.  As of npm v7, peerDependencies ",Object(i.b)("em",{parentName:"p"},"are"),"\ninstalled by default."),Object(i.b)("p",null,"Trying to install another plugin with a conflicting requirement may cause\nan error if the tree cannot be resolved correctly. For this reason, make\nsure your plugin requirement is as broad as possible, and not to lock it\ndown to specific patch versions."),Object(i.b)("p",null,"Assuming the host complies with ",Object(i.b)("a",{parentName:"p",href:"https://semver.org/"},"semver"),", only changes\nin the host package's major version will break your plugin. Thus, if you've\nworked with every 1.x version of the host package, use ",Object(i.b)("inlineCode",{parentName:"p"},'"^1.0"')," or ",Object(i.b)("inlineCode",{parentName:"p"},'"1.x"'),"\nto express this. If you depend on features introduced in 1.5.2, use\n",Object(i.b)("inlineCode",{parentName:"p"},'"^1.5.2"'),"."),Object(i.b)("h3",null,"peerDependenciesMeta"),Object(i.b)("p",null,"When a user installs your package, npm will emit warnings if packages\nspecified in ",Object(i.b)("inlineCode",{parentName:"p"},"peerDependencies")," are not already installed. The\n",Object(i.b)("inlineCode",{parentName:"p"},"peerDependenciesMeta")," field serves to provide npm more information on how\nyour peer dependencies are to be used. Specifically, it allows peer\ndependencies to be marked as optional."),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "tea-latte",\n  "version": "1.3.5",\n  "peerDependencies": {\n    "tea": "2.x",\n    "soy-milk": "1.2"\n  },\n  "peerDependenciesMeta": {\n    "soy-milk": {\n      "optional": true\n    }\n  }\n}\n')),Object(i.b)("p",null,"Marking a peer dependency as optional ensures npm will not emit a warning\nif the ",Object(i.b)("inlineCode",{parentName:"p"},"soy-milk")," package is not installed on the host. This allows you to\nintegrate and interact with a variety of host packages without requiring\nall of them to be installed."),Object(i.b)("h3",null,"bundleDependencies"),Object(i.b)("p",null,"This defines an array of package names that will be bundled when publishing\nthe package."),Object(i.b)("p",null,"In cases where you need to preserve npm packages locally or have them\navailable through a single file download, you can bundle the packages in a\ntarball file by specifying the package names in the ",Object(i.b)("inlineCode",{parentName:"p"},"bundleDependencies"),"\narray and executing ",Object(i.b)("inlineCode",{parentName:"p"},"npm pack"),"."),Object(i.b)("p",null,"For example:"),Object(i.b)("p",null,"If we define a package.json like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "awesome-web-framework",\n  "version": "1.0.0",\n  "bundleDependencies": [\n    "renderized",\n    "super-streams"\n  ]\n}\n')),Object(i.b)("p",null,"we can obtain ",Object(i.b)("inlineCode",{parentName:"p"},"awesome-web-framework-1.0.0.tgz")," file by running ",Object(i.b)("inlineCode",{parentName:"p"},"npm pack"),".\nThis file contains the dependencies ",Object(i.b)("inlineCode",{parentName:"p"},"renderized")," and ",Object(i.b)("inlineCode",{parentName:"p"},"super-streams")," which\ncan be installed in a new project by executing ",Object(i.b)("inlineCode",{parentName:"p"},"npm install\nawesome-web-framework-1.0.0.tgz"),".  Note that the package names do not\ninclude any versions, as that information is specified in ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies"),"."),Object(i.b)("p",null,"If this is spelled ",Object(i.b)("inlineCode",{parentName:"p"},'"bundledDependencies"'),", then that is also honored."),Object(i.b)("p",null,"Alternatively, ",Object(i.b)("inlineCode",{parentName:"p"},'"bundleDependencies"')," can be defined as a boolean value. A\nvalue of ",Object(i.b)("inlineCode",{parentName:"p"},"true")," will bundle all dependencies, a value of ",Object(i.b)("inlineCode",{parentName:"p"},"false")," will bundle\nnone."),Object(i.b)("h3",null,"optionalDependencies"),Object(i.b)("p",null,"If a dependency can be used, but you would like npm to proceed if it cannot\nbe found or fails to install, then you may put it in the\n",Object(i.b)("inlineCode",{parentName:"p"},"optionalDependencies")," object.  This is a map of package name to version or\nurl, just like the ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies")," object.  The difference is that build\nfailures do not cause installation to fail.  Running ",Object(i.b)("inlineCode",{parentName:"p"},"npm install\n--no-optional")," will prevent these dependencies from being installed."),Object(i.b)("p",null,"It is still your program's responsibility to handle the lack of the\ndependency.  For example, something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"try {\n  var foo = require('foo')\n  var fooVersion = require('foo/package.json').version\n} catch (er) {\n  foo = null\n}\nif ( notGoodFooVersion(fooVersion) ) {\n  foo = null\n}\n\n// .. then later in your program ..\n\nif (foo) {\n  foo.doFooThings()\n}\n")),Object(i.b)("p",null,"Entries in ",Object(i.b)("inlineCode",{parentName:"p"},"optionalDependencies")," will override entries of the same name in\n",Object(i.b)("inlineCode",{parentName:"p"},"dependencies"),", so it's usually best to only put in one place."),Object(i.b)("h3",null,"overrides"),Object(i.b)("p",null,"If you need to make specific changes to dependencies of your dependencies, for\nexample replacing the version of a dependency with a known security issue,\nreplacing an existing dependency with a fork, or making sure that the same\nversion of a package is used everywhere, then you may add an override."),Object(i.b)("p",null,"Overrides provide a way to replace a package in your dependency tree with\nanother version, or another package entirely. These changes can be scoped as\nspecific or as vague as desired."),Object(i.b)("p",null,"To make sure the package ",Object(i.b)("inlineCode",{parentName:"p"},"foo")," is always installed as version ",Object(i.b)("inlineCode",{parentName:"p"},"1.0.0")," no matter\nwhat version your dependencies rely on:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "overrides": {\n    "foo": "1.0.0"\n  }\n}\n')),Object(i.b)("p",null,"The above is a short hand notation, the full object form can be used to allow\noverriding a package itself as well as a child of the package. This will cause\n",Object(i.b)("inlineCode",{parentName:"p"},"foo")," to always be ",Object(i.b)("inlineCode",{parentName:"p"},"1.0.0")," while also making ",Object(i.b)("inlineCode",{parentName:"p"},"bar")," at any depth beyond ",Object(i.b)("inlineCode",{parentName:"p"},"foo"),"\nalso ",Object(i.b)("inlineCode",{parentName:"p"},"1.0.0"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "overrides": {\n    "foo": {\n      ".": "1.0.0",\n      "bar": "1.0.0"\n    }\n  }\n}\n')),Object(i.b)("p",null,"To only override ",Object(i.b)("inlineCode",{parentName:"p"},"foo")," to be ",Object(i.b)("inlineCode",{parentName:"p"},"1.0.0")," when it's a child (or grandchild, or great\ngrandchild, etc) of the package ",Object(i.b)("inlineCode",{parentName:"p"},"bar"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "overrides": {\n    "bar": {\n      "foo": "1.0.0"\n    }\n  }\n}\n')),Object(i.b)("p",null,"Keys can be nested to any arbitrary length. To override ",Object(i.b)("inlineCode",{parentName:"p"},"foo")," only when it's a\nchild of ",Object(i.b)("inlineCode",{parentName:"p"},"bar")," and only when ",Object(i.b)("inlineCode",{parentName:"p"},"bar")," is a child of ",Object(i.b)("inlineCode",{parentName:"p"},"baz"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "overrides": {\n    "baz": {\n      "bar": {\n        "foo": "1.0.0"\n      }\n    }\n  }\n}\n')),Object(i.b)("p",null,"The key of an override can also include a version, or range of versions.\nTo override ",Object(i.b)("inlineCode",{parentName:"p"},"foo")," to ",Object(i.b)("inlineCode",{parentName:"p"},"1.0.0"),", but only when it's a child of ",Object(i.b)("inlineCode",{parentName:"p"},"bar@2.0.0"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "overrides": {\n    "bar@2.0.0": {\n      "foo": "1.0.0"\n    }\n  }\n}\n')),Object(i.b)("p",null,"You may not set an override for a package that you directly depend on unless\nboth the dependency and the override itself share the exact same spec. To make\nthis limitation easier to deal with, overrides may also be defined as a\nreference to a spec for a direct dependency by prefixing the name of the\npackage you wish the version to match with a ",Object(i.b)("inlineCode",{parentName:"p"},"$"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "foo": "^1.0.0"\n  },\n  "overrides": {\n    // BAD, will throw an EOVERRIDE error\n    // "foo": "^2.0.0"\n    // GOOD, specs match so override is allowed\n    // "foo": "^1.0.0"\n    // BEST, the override is defined as a reference to the dependency\n    "foo": "$foo",\n    // the referenced package does not need to match the overridden one\n    "bar": "$foo"\n  }\n}\n')),Object(i.b)("h3",null,"engines"),Object(i.b)("p",null,"You can specify the version of node that your stuff works on:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "engines": {\n    "node": ">=0.10.3 <15"\n  }\n}\n')),Object(i.b)("p",null,"And, like with dependencies, if you don't specify the version (or if you\nspecify \"","*",'" as the version), then any version of node will do.'),Object(i.b)("p",null,'You can also use the "engines" field to specify which versions of npm are\ncapable of properly installing your program.  For example:'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "engines": {\n    "npm": "~1.0.20"\n  }\n}\n')),Object(i.b)("p",null,"Unless the user has set the ",Object(i.b)("inlineCode",{parentName:"p"},"engine-strict")," config flag, this field is\nadvisory only and will only produce warnings when your package is installed\nas a dependency."),Object(i.b)("h3",null,"os"),Object(i.b)("p",null,"You can specify which operating systems your\nmodule will run on:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "os": [\n    "darwin",\n    "linux"\n  ]\n}\n')),Object(i.b)("p",null,"You can also block instead of allowing operating systems, just prepend the\nblocked os with a '!':"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "os": [\n    "!win32"\n  ]\n}\n')),Object(i.b)("p",null,"The host operating system is determined by ",Object(i.b)("inlineCode",{parentName:"p"},"process.platform")),Object(i.b)("p",null,"It is allowed to both block and allow an item, although there isn't any\ngood reason to do this."),Object(i.b)("h3",null,"cpu"),Object(i.b)("p",null,"If your code only runs on certain cpu architectures,\nyou can specify which ones."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "cpu": [\n    "x64",\n    "ia32"\n  ]\n}\n')),Object(i.b)("p",null,"Like the ",Object(i.b)("inlineCode",{parentName:"p"},"os")," option, you can also block architectures:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "cpu": [\n    "!arm",\n    "!mips"\n  ]\n}\n')),Object(i.b)("p",null,"The host architecture is determined by ",Object(i.b)("inlineCode",{parentName:"p"},"process.arch")),Object(i.b)("h3",null,"private"),Object(i.b)("p",null,"If you set ",Object(i.b)("inlineCode",{parentName:"p"},'"private": true')," in your package.json, then npm will refuse to\npublish it."),Object(i.b)("p",null,"This is a way to prevent accidental publication of private repositories.\nIf you would like to ensure that a given package is only ever published to\na specific registry (for example, an internal registry), then use the\n",Object(i.b)("inlineCode",{parentName:"p"},"publishConfig")," dictionary described below to override the ",Object(i.b)("inlineCode",{parentName:"p"},"registry"),"\nconfig param at publish-time."),Object(i.b)("h3",null,"publishConfig"),Object(i.b)("p",null,'This is a set of config values that will be used at publish-time. It\'s\nespecially handy if you want to set the tag, registry or access, so that\nyou can ensure that a given package is not tagged with "latest", published\nto the global public registry or that a scoped module is private by\ndefault.'),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"/cli/v8/using-npm/config"},Object(i.b)("inlineCode",{parentName:"a"},"config"))," to see the list of config options that\ncan be overridden."),Object(i.b)("h3",null,"workspaces"),Object(i.b)("p",null,"The optional ",Object(i.b)("inlineCode",{parentName:"p"},"workspaces")," field is an array of file patterns that describes\nlocations within the local file system that the install client should look\nup to find each ",Object(i.b)("a",{parentName:"p",href:"/cli/v8/using-npm/workspaces"},"workspace")," that needs to be\nsymlinked to the top level ",Object(i.b)("inlineCode",{parentName:"p"},"node_modules")," folder."),Object(i.b)("p",null,"It can describe either the direct paths of the folders to be used as\nworkspaces or it can define globs that will resolve to these same folders."),Object(i.b)("p",null,"In the following example, all folders located inside the folder\n",Object(i.b)("inlineCode",{parentName:"p"},"./packages")," will be treated as workspaces as long as they have valid\n",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," files inside them:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "workspace-example",\n  "workspaces": [\n    "./packages/*"\n  ]\n}\n')),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"/cli/v8/using-npm/workspaces"},Object(i.b)("inlineCode",{parentName:"a"},"workspaces"))," for more examples."),Object(i.b)("h3",null,"DEFAULT VALUES"),Object(i.b)("p",null,"npm will default some values based on package contents."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},'"scripts": {"start": "node server.js"}')),Object(i.b)("p",{parentName:"li"},"If there is a ",Object(i.b)("inlineCode",{parentName:"p"},"server.js")," file in the root of your package, then npm will\ndefault the ",Object(i.b)("inlineCode",{parentName:"p"},"start")," command to ",Object(i.b)("inlineCode",{parentName:"p"},"node server.js"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},'"scripts":{"install": "node-gyp rebuild"}')),Object(i.b)("p",{parentName:"li"},"If there is a ",Object(i.b)("inlineCode",{parentName:"p"},"binding.gyp")," file in the root of your package and you have\nnot defined an ",Object(i.b)("inlineCode",{parentName:"p"},"install")," or ",Object(i.b)("inlineCode",{parentName:"p"},"preinstall")," script, npm will default the\n",Object(i.b)("inlineCode",{parentName:"p"},"install")," command to compile using node-gyp.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},'"contributors": [...]')),Object(i.b)("p",{parentName:"li"},"If there is an ",Object(i.b)("inlineCode",{parentName:"p"},"AUTHORS")," file in the root of your package, npm will treat\neach line as a ",Object(i.b)("inlineCode",{parentName:"p"},"Name <email> (url)")," format, where email and url are\noptional.  Lines which start with a ",Object(i.b)("inlineCode",{parentName:"p"},"#")," or are blank, will be ignored."))),Object(i.b)("h3",null,"SEE ALSO"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/node-semver#versions"},"semver")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/using-npm/workspaces"},"workspaces")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-init"},"npm init")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-version"},"npm version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-config"},"npm config")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-help"},"npm help")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-install"},"npm install")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-publish"},"npm publish")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/cli/v8/commands/npm-uninstall"},"npm uninstall"))))}p.isMDXComponent=!0},O6H6:function(e,n,t){"use strict";var a=t("vOnD"),i=t("u9kb"),l=t("aOgs"),o=t("q1tI"),r=t.n(o),s=t("7ljp"),p=t("pD55"),c=t("8Aig"),b=t("ReZb"),m=t("GCVy"),d=t("+6vE");var u=function(e){var n=e.children;return r.a.createElement(i.d,{as:"pre",mt:0,mb:3,p:3,border:0,style:{color:"rgb(57, 58, 52)",backgroundColor:"rgb(246, 248, 250)",overflow:"auto"}},r.a.createElement(i.s,{fontFamily:"mono",fontSize:1},n))};var h=function(e){var n=e.children;return r.a.createElement("strong",null,n)},j=t("gnlW"),O=t("mwnC"),f=t("/Rw0"),g=t("dVM4"),y=Object(a.f)(i.e).withConfig({displayName:"table-of-contents___StyledBox",componentId:"eay2b8-0"})({listStyle:"none",lineHeight:"1.4em"});function N(e){var n=e.items,t=e.depth;return r.a.createElement(y,{key:n,as:"ul",m:0,p:0},n.map((function(e){return r.a.createElement(i.e,{as:"li",key:e.url,pl:t>0?3:0},r.a.createElement(i.n,{key:e.title,display:"inline-block",py:1,href:e.url,color:"gray.6"},e.title),e.items?r.a.createElement(N,{items:e.items,depth:t+1}):null)})))}N.defaultProps={depth:0};var w=N,v=t("MfeC");function C(e){var n=v.a.getPath(e.location.pathname),t=v.a.getVariantAndPage(e.root,n);if(!t)return null;var a=v.a.getVariantsForPage(e.root,t.page),l=[],o=a[0];return 0===a.length?null:(a.forEach((function(e){e.page.url===n&&(o=e),l.push(r.a.createElement(i.i.Item,{onClick:function(){window.location.href=e.page.url},key:e.variant.title},e.variant.title))})),r.a.createElement(i.i,{overlay:e.overlay},r.a.createElement(i.i.Button,null,o.variant.title),r.a.createElement(C.Menu,{direction:e.direction,width:e.menuWidth},l)))}C.Menu=Object(a.f)(i.i.Menu).withConfig({displayName:"variant-select__Menu",componentId:"sc-1rmksyl-0"})(["width:",";"],(function(e){return e.width?e.width:"160px"}));var k=C,x=Object(a.f)(i.k).withConfig({displayName:"layout___StyledFlex",componentId:"sc-1xkoyzi-0"})({zIndex:0}),I=Object(a.f)(i.l).withConfig({displayName:"layout___StyledGrid",componentId:"sc-1xkoyzi-1"})({alignItems:"start",alignSelf:"start"}),T=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox",componentId:"sc-1xkoyzi-2"})({gridArea:"heading"}),E=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox2",componentId:"sc-1xkoyzi-3"})({"margin-top":"25px"}),S=Object(a.f)(i.o).withConfig({displayName:"layout___StyledPosition",componentId:"sc-1xkoyzi-4"})({gridArea:"table-of-contents",overflow:"auto"}),D=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox3",componentId:"sc-1xkoyzi-5"})({gridArea:"content"});n.a=function(e){var n=e.children,t=e.pageContext,a=e.location,o=t.frontmatter,y=o.title,N=o.description,C=o.status,A=o.source,L=o.additionalContributors,R=void 0===L?[]:L,_=v.a.getVariantRoot(a.pathname);return r.a.createElement(s.a,{components:{Index:b.a,Note:m.a,Prompt:u,PromptReply:h,Screenshot:j.a}},r.a.createElement(i.k,{flexDirection:"column",minHeight:"100vh"},r.a.createElement(p.a,{title:y,description:N}),r.a.createElement(c.b,{location:a,isSearchEnabled:t.isSearchEnabled}),r.a.createElement(x,{flex:"1 1 auto",flexDirection:"row"},r.a.createElement(i.e,{display:["none",null,null,"block"]},r.a.createElement(O.a,{editOnGitHub:t.themeOptions.showSidebarEditLink&&t.themeOptions.editOnGitHub,location:a})),r.a.createElement(I,{id:"skip-nav",maxWidth:"100%",gridTemplateColumns:["100%",null,"minmax(0, 65ch) 220px"],gridTemplateAreas:['"heading" "content"',null,'"heading table-of-contents" "content table-of-contents"'],gridColumnGap:[null,null,6,7],gridRowGap:3,mx:"auto",p:[5,6,null,7]},r.a.createElement(T,null,r.a.createElement(i.d,{borderWidth:0,borderBottomWidth:1,borderRadius:0,pb:2},r.a.createElement(i.e,null,r.a.createElement(i.e,null,r.a.createElement(i.m,{as:"h1"},y),N))),null!=_?r.a.createElement(E,null,r.a.createElement(k,{overlay:!0,direction:"se",menuWidth:"min(30ch, 500px)",root:_,location:a})):null),t.tableOfContents.items?r.a.createElement(S,{display:["none",null,"block"],position:"sticky",top:c.a+24,mt:"6px",maxHeight:"calc(100vh - "+c.a+"px - 24px)"},r.a.createElement(i.s,{display:"inline-block",fontWeight:"bold",mb:1},"Table of contents"),r.a.createElement(w,{items:t.tableOfContents.items})):null,r.a.createElement(D,null,C||A?r.a.createElement(i.k,{mb:3,alignItems:"center"},C?r.a.createElement(g.a,{status:C}):null,r.a.createElement(i.e,{mx:"auto"}),A?r.a.createElement(f.a,{href:A}):null):null,t.tableOfContents.items?r.a.createElement(i.e,{display:["block",null,"none"],mb:3},r.a.createElement(i.h,null,(function(e){var n=e.open;return r.a.createElement(r.a.Fragment,null,r.a.createElement(i.s,{as:"summary",fontWeight:"bold"},n?r.a.createElement(i.r,{icon:l.b,mr:2}):r.a.createElement(i.r,{icon:l.c,mr:2}),"Table of contents"),r.a.createElement(i.e,{pt:1},r.a.createElement(w,{items:t.tableOfContents.items})))}))):null,n,r.a.createElement(d.a,{editOnGitHub:t.themeOptions.editOnGitHub,editUrl:t.editUrl,contributors:t.contributors.concat(R.map((function(e){return{login:e}})))}))))))}}}]);
//# sourceMappingURL=component---content-cli-v-8-configuring-npm-package-json-md-f0d15638e46956e23e0f.js.map