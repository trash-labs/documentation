{"version":3,"sources":["webpack:///./content/cli/v8/commands/npm-pkg.md","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt-reply.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/table-of-contents.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/variant-select.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","Prompt","children","as","mt","mb","p","border","style","color","backgroundColor","overflow","fontFamily","fontSize","PromptReply","listStyle","lineHeight","TableOfContents","items","depth","key","m","map","item","url","pl","title","display","py","href","defaultProps","VariantSelect","path","NavHierarchy","getPath","location","pathname","vp","getVariantAndPage","root","variantPages","getVariantsForPage","page","selectedItem","length","forEach","match","push","Item","onClick","window","variant","overlay","Button","Menu","direction","width","menuWidth","styled","Dropdown","zIndex","alignItems","alignSelf","gridArea","Layout","pageContext","frontmatter","description","status","source","additionalContributors","variantRoot","getVariantRoot","Index","Note","Screenshot","flexDirection","minHeight","isSearchEnabled","flex","editOnGitHub","themeOptions","showSidebarEditLink","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","open","icon","ChevronDownIcon","mr","ChevronRightIcon","pt","editUrl","contributors","concat","login"],"mappings":"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","file":"component---content-cli-v-8-commands-npm-pkg-md-cb4d6b15bb879c4da59e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/documentation/documentation/node_modules/gatsby-theme-doctornpm/src/components/layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Synopsis`}</h3>\n    {\n      /* AUTOGENERATED USAGE DESCRIPTIONS START */\n    }\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/commands/pkg.js */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm pkg set <key>=<value> [<key>=<value> ...]\nnpm pkg get [<key> [<key> ...]]\nnpm pkg delete <key> [<key> ...]\nnpm pkg set [<array>[<index>].<key>=<value> ...]\nnpm pkg set [<array>[].<key>=<value> ...]\n`}</code></pre>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/commands/pkg.js */\n    }\n    {\n      /* AUTOGENERATED USAGE DESCRIPTIONS END */\n    }\n    <h3>{`Description`}</h3>\n    <p>{`A command that automates the management of `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` files.\n`}<inlineCode parentName=\"p\">{`npm pkg`}</inlineCode>{` provide 3 different sub commands that allow you to modify or retrieve\nvalues for given object keys in your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n    <p>{`The syntax to retrieve and set fields is a dot separated representation of\nthe nested object properties to be found within your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`, it's the\nsame notation used in `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v8/commands/npm-view\"\n      }}><inlineCode parentName=\"a\">{`npm view`}</inlineCode></a>{` to retrieve information\nfrom the registry manifest, below you can find more examples on how to use it.`}</p>\n    <p>{`Returned values are always in `}<strong parentName=\"p\">{`json`}</strong>{` format.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm pkg get <field>`}</inlineCode></p>\n        <p parentName=\"li\">{`  Retrieves a value `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`, defined in your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file.`}</p>\n        <p parentName=\"li\">{`  For example, in order to retrieve the name of the current package, you\ncan run:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg get name\n`}</code></pre>\n        <p parentName=\"li\">{`  It's also possible to retrieve multiple values at once:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg get name version\n`}</code></pre>\n        <p parentName=\"li\">{`  You can view child fields by separating them with a period. To retrieve\nthe value of a test `}<inlineCode parentName=\"p\">{`script`}</inlineCode>{` value, you would run the following command:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg get scripts.test\n`}</code></pre>\n        <p parentName=\"li\">{`  For fields that are arrays, requesting a non-numeric field will return\nall of the values from the objects in the list. For example, to get all\nthe contributor emails for a package, you would run:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg get contributors.email\n`}</code></pre>\n        <p parentName=\"li\">{`  You may also use numeric indices in square braces to specifically select\nan item in an array field. To just get the email address of the first\ncontributor in the list, you can run:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg get contributors[0].email\n`}</code></pre>\n        <p parentName=\"li\">{`  For complex fields you can also name a property in square brackets\nto specifically select a child field. This is especially helpful\nwith the exports object:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg get \"exports[.].require\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm pkg set <field>=<value>`}</inlineCode></p>\n        <p parentName=\"li\">{`  Sets a `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` in your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` based on the `}<inlineCode parentName=\"p\">{`field`}</inlineCode>{` value. When\nsaving to your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file the same set of rules used during\n`}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` and other cli commands that touches the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file\nare used, making sure to respect the existing indentation and possibly\napplying some validation prior to saving values to the file.`}</p>\n        <p parentName=\"li\">{`  The same syntax used to retrieve values from your package can also be used\nto define new properties or overriding existing ones, below are some\nexamples of how the dot separated syntax can be used to edit your\n`}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file.`}</p>\n        <p parentName=\"li\">{`  Defining a new bin named `}<inlineCode parentName=\"p\">{`mynewcommand`}</inlineCode>{` in your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` that points\nto a file `}<inlineCode parentName=\"p\">{`cli.js`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg set bin.mynewcommand=cli.js\n`}</code></pre>\n        <p parentName=\"li\">{`  Setting multiple fields at once is also possible:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg set description='Awesome package' engines.node='>=10'\n`}</code></pre>\n        <p parentName=\"li\">{`  It's also possible to add to array values, for example to add a new\ncontributor entry:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg set contributors[0].name='Foo' contributors[0].email='foo@bar.ca'\n`}</code></pre>\n        <p parentName=\"li\">{`  You may also append items to the end of an array using the special\nempty bracket notation:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg set contributors[].name='Foo' contributors[].name='Bar'\n`}</code></pre>\n        <p parentName=\"li\">{`  It's also possible to parse values as json prior to saving them to your\n`}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file, for example in order to set a `}<inlineCode parentName=\"p\">{`\"private\": true`}</inlineCode>{`\nproperty:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg set private=true --json\n`}</code></pre>\n        <p parentName=\"li\">{`  It also enables saving values as numbers:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg set tap.timeout=60 --json\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm pkg delete <key>`}</inlineCode></p>\n        <p parentName=\"li\">{`  Deletes a `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` from your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode></p>\n        <p parentName=\"li\">{`  The same syntax used to set values from your package can also be used\nto remove existing ones. For example, in order to remove a script named\nbuild:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm pkg delete scripts.build\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Workspaces support`}</h3>\n    <p>{`You can set/get/delete items across your configured workspaces by using the\n`}<inlineCode parentName=\"p\">{`workspace`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`workspaces`}</inlineCode>{` config options.`}</p>\n    <p>{`For example, setting a `}<inlineCode parentName=\"p\">{`funding`}</inlineCode>{` value across all configured workspaces\nof a project:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm pkg set funding=https://example.com --ws\n`}</code></pre>\n    <p>{`When using `}<inlineCode parentName=\"p\">{`npm pkg get`}</inlineCode>{` to retrieve info from your configured workspaces, the\nreturned result will be in a json format in which top level keys are the\nnames of each workspace, the values of these keys will be the result values\nreturned from each of the configured workspaces, e.g:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm pkg get name version --ws\n{\n  \"a\": {\n    \"name\": \"a\",\n    \"version\": \"1.0.0\"\n  },\n  \"b\": {\n    \"name\": \"b\",\n    \"version\": \"1.0.0\"\n  }\n}\n`}</code></pre>\n    <h3>{`Configuration`}</h3>\n    {\n      /* AUTOGENERATED CONFIG DESCRIPTIONS START */\n    }\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`force`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Removes various protections against unfortunate side effects, common\nmistakes, unnecessary performance degradation, and malicious input.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Allow clobbering non-npm files in global installs.`}</li>\n      <li parentName=\"ul\">{`Allow the `}<inlineCode parentName=\"li\">{`npm version`}</inlineCode>{` command to work on an unclean git repository.`}</li>\n      <li parentName=\"ul\">{`Allow deleting the cache folder with `}<inlineCode parentName=\"li\">{`npm cache clean`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Allow installing packages that have an `}<inlineCode parentName=\"li\">{`engines`}</inlineCode>{` declaration requiring a\ndifferent version of npm.`}</li>\n      <li parentName=\"ul\">{`Allow installing packages that have an `}<inlineCode parentName=\"li\">{`engines`}</inlineCode>{` declaration requiring a\ndifferent version of `}<inlineCode parentName=\"li\">{`node`}</inlineCode>{`, even if `}<inlineCode parentName=\"li\">{`--engine-strict`}</inlineCode>{` is enabled.`}</li>\n      <li parentName=\"ul\">{`Allow `}<inlineCode parentName=\"li\">{`npm audit fix`}</inlineCode>{` to install modules outside your stated dependency\nrange (including SemVer-major changes).`}</li>\n      <li parentName=\"ul\">{`Allow unpublishing all versions of a published package.`}</li>\n      <li parentName=\"ul\">{`Allow conflicting peerDependencies to be installed in the root project.`}</li>\n      <li parentName=\"ul\">{`Implicitly set `}<inlineCode parentName=\"li\">{`--yes`}</inlineCode>{` during `}<inlineCode parentName=\"li\">{`npm init`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Allow clobbering existing values in `}<inlineCode parentName=\"li\">{`npm pkg`}</inlineCode></li>\n      <li parentName=\"ul\">{`Allow unpublishing of entire packages (not just a single version).`}</li>\n    </ul>\n    <p>{`If you don't have a clear idea of what you want to do, it is strongly\nrecommended that you do not use this option!`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`json`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: false`}</li>\n      <li parentName=\"ul\">{`Type: Boolean`}</li>\n    </ul>\n    <p>{`Whether or not to output JSON data, rather than the normal output.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`In `}<inlineCode parentName=\"li\">{`npm pkg set`}</inlineCode>{` it enables parsing set values with JSON.parse() before\nsaving them to your `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Not supported by all npm commands.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`workspace`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default:`}</li>\n      <li parentName=\"ul\">{`Type: String (can be set multiple times)`}</li>\n    </ul>\n    <p>{`Enable running a command in the context of the configured workspaces of the\ncurrent project while filtering by running only the workspaces defined by\nthis configuration option.`}</p>\n    <p>{`Valid values for the `}<inlineCode parentName=\"p\">{`workspace`}</inlineCode>{` config are either:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Workspace names`}</li>\n      <li parentName=\"ul\">{`Path to a workspace directory`}</li>\n      <li parentName=\"ul\">{`Path to a parent workspace directory (will result in selecting all\nworkspaces within that folder)`}</li>\n    </ul>\n    <p>{`When set for the `}<inlineCode parentName=\"p\">{`npm init`}</inlineCode>{` command, this may be set to the folder of a\nworkspace which does not yet exist, to create the folder and set it up as a\nbrand new workspace within the project.`}</p>\n    <p>{`This value is not exported to the environment for child processes.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    <h4><inlineCode parentName=\"h4\">{`workspaces`}</inlineCode></h4>\n    <ul>\n      <li parentName=\"ul\">{`Default: null`}</li>\n      <li parentName=\"ul\">{`Type: null or Boolean`}</li>\n    </ul>\n    <p>{`Set to true to run the command in the context of `}<strong parentName=\"p\">{`all`}</strong>{` configured\nworkspaces.`}</p>\n    <p>{`Explicitly setting this to false will cause commands like `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{` to\nignore workspaces altogether. When not set explicitly:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Commands that operate on the `}<inlineCode parentName=\"li\">{`node_modules`}</inlineCode>{` tree (install, update, etc.)\nwill link workspaces into the `}<inlineCode parentName=\"li\">{`node_modules`}</inlineCode>{` folder. - Commands that do\nother things (test, exec, publish, etc.) will operate on the root project,\n`}<em parentName=\"li\">{`unless`}</em>{` one or more workspaces are specified in the `}<inlineCode parentName=\"li\">{`workspace`}</inlineCode>{` config.`}</li>\n    </ul>\n    <p>{`This value is not exported to the environment for child processes.`}</p>\n    {\n      /* automatically generated, do not edit manually */\n    }\n    {\n      /* see lib/utils/config/definitions.js */\n    }\n    {\n      /* AUTOGENERATED CONFIG DESCRIPTIONS END */\n    }\n    <h2>{`See Also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-install\"\n        }}>{`npm install`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-init\"\n        }}>{`npm init`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-config\"\n        }}>{`npm config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/commands/npm-set-script\"\n        }}>{`npm set-script`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v8/using-npm/workspaces\"\n        }}>{`workspaces`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\nimport {BorderBox, Text} from '@primer/components'\n\nfunction Prompt({children}) {\n  return (\n      <BorderBox\n       as=\"pre\"\n       mt={0}\n       mb={3}\n       p={3}\n       border={0}\n       style={{color: 'rgb(57, 58, 52)', backgroundColor: 'rgb(246, 248, 250)', overflow: 'auto'}}\n      >\n          <Text fontFamily=\"mono\" fontSize={1}>{children}</Text>\n      </BorderBox>\n  )\n}\n\nexport default Prompt\n","import React from 'react';\n\nfunction PromptReply({children}) {\n    return (<strong>{children}</strong>);\n}\n\nexport default PromptReply;\n","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box key={items} as=\"ul\" m={0} p={0} css={{listStyle: 'none', lineHeight: '1.4em'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link key={item.title} display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","// VariantSelect: allows a variant to be set up within a document hierarchy\n//\n// For example, given two paths `/docs/v1.0/foo` and `/docs/v2.0/foo`, the\n// second folder acts as a variant.  If you use <VariantSelect root=\"/docs\">\n// then you'll get a selection for the different variants (v1.0, v2.0).\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Dropdown } from '@primer/components';\nimport NavHierarchy from '../nav-hierarchy'\n\nVariantSelect.Menu = styled(Dropdown.Menu)`\n  width: ${props => props.width ? props.width : '160px'};\n`\n\nfunction VariantSelect(props) {\n  const path = NavHierarchy.getPath(props.location.pathname);\n  const vp = NavHierarchy.getVariantAndPage(props.root, path);\n\n  if (!vp) {\n      return null;\n  }\n\n  const variantPages = NavHierarchy.getVariantsForPage(props.root, vp.page);\n  const items = [];\n  let selectedItem = variantPages[0];\n\n  if (variantPages.length === 0) {\n      return null;\n  }\n\n  variantPages.forEach((match) => {\n      if (match.page.url === path) {\n          selectedItem = match;\n      }\n\n      items.push(<Dropdown.Item onClick={() => { window.location.href = match.page.url; }} key={match.variant.title}>{match.variant.title}</Dropdown.Item>);\n  });\n\n  return (\n      <Dropdown overlay={props.overlay}>\n          <Dropdown.Button>{selectedItem.variant.title}</Dropdown.Button>\n          <VariantSelect.Menu direction={props.direction} width={props.menuWidth}>\n              {items}\n          </VariantSelect.Menu>\n      </Dropdown>\n  );\n}\n\nexport default VariantSelect\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  StyledOcticon,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport React from 'react'\nimport {MDXProvider} from \"@mdx-js/react\"\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport Index from './index'\nimport Note from './note'\nimport PageFooter from './page-footer'\nimport Prompt from './prompt'\nimport PromptReply from './prompt-reply'\nimport Screenshot from './screenshot'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\nimport VariantSelect from './variant-select'\nimport NavHierarchy from '../nav-hierarchy'\n\nfunction Layout({children, pageContext, location}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  const variantRoot = NavHierarchy.getVariantRoot(location.pathname);\n\n  return (\n    <MDXProvider components={{\n      Index,\n      Note,\n      Prompt,\n      PromptReply,\n      Screenshot\n    }}>\n\n      <Flex flexDirection=\"column\" minHeight=\"100vh\">\n        <Head title={title} description={description} />\n        <Header location={location} isSearchEnabled={pageContext.isSearchEnabled} />\n        <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n          <Box display={['none', null, null, 'block']}>\n            <Sidebar\n              editOnGitHub={\n                pageContext.themeOptions.showSidebarEditLink &&\n                pageContext.themeOptions.editOnGitHub\n              }\n              location={location}\n            />\n          </Box>\n          <Grid\n            id=\"skip-nav\"\n            maxWidth=\"100%\"\n            gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n            gridTemplateAreas={[\n              '\"heading\" \"content\"',\n              null,\n              '\"heading table-of-contents\" \"content table-of-contents\"',\n            ]}\n            gridColumnGap={[null, null, 6, 7]}\n            gridRowGap={3}\n            mx=\"auto\"\n            p={[5, 6, null, 7]}\n            css={{alignItems: 'start', alignSelf: 'start'}}\n          >\n            <Box css={{gridArea: 'heading'}}>\n              <BorderBox\n                borderWidth={0}\n                borderBottomWidth={1}\n                borderRadius={0}\n                pb={2}\n              >\n                <Box>\n                  <Box>\n                    <Heading as=\"h1\">{title}</Heading>\n                    {description}\n                  </Box>\n                </Box>\n              </BorderBox>\n              {variantRoot != null ? (\n                <Box css={{'margin-top': '25px'}}>\n                  <VariantSelect overlay={true} direction=\"se\" menuWidth=\"min(30ch, 500px)\" root={variantRoot} location={location} />\n                </Box>\n              ) : null}\n            </Box>\n            {pageContext.tableOfContents.items ? (\n              <Position\n                display={['none', null, 'block']}\n                css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n                position=\"sticky\"\n                top={HEADER_HEIGHT + 24}\n                mt=\"6px\"\n                maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n              >\n                <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                  Table of contents\n                </Text>\n                <TableOfContents items={pageContext.tableOfContents.items} />\n              </Position>\n            ) : null}\n            <Box css={{gridArea: 'content'}}>\n              {status || source ? (\n                <Flex mb={3} alignItems=\"center\">\n                  {status ? <StatusLabel status={status} /> : null}\n                  <Box mx=\"auto\" />\n                  {source ? <SourceLink href={source} /> : null}\n                </Flex>\n              ) : null}\n              {pageContext.tableOfContents.items ? (\n                <Box display={['block', null, 'none']} mb={3}>\n                  <Details>\n                    {({open}) => (\n                      <>\n                        <Text as=\"summary\" fontWeight=\"bold\">\n                          {open ? (\n                            <StyledOcticon icon={ChevronDownIcon} mr={2} />\n                          ) : (\n                            <StyledOcticon icon={ChevronRightIcon} mr={2} />\n                          )}\n                          Table of contents\n                        </Text>\n                        <Box pt={1}>\n                          <TableOfContents\n                            items={pageContext.tableOfContents.items}\n                          />\n                        </Box>\n                      </>\n                    )}\n                  </Details>\n                </Box>\n              ) : null}\n              {children}\n              <PageFooter\n                editOnGitHub={pageContext.themeOptions.editOnGitHub}\n                editUrl={pageContext.editUrl}\n                contributors={pageContext.contributors.concat(\n                  additionalContributors.map((login) => ({login})),\n                )}\n              />\n            </Box>\n          </Grid>\n        </Flex>\n      </Flex>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}